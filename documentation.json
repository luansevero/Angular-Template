{
    "pipes": [
        {
            "name": "InitialsPipe",
            "id": "pipe-InitialsPipe-c897071b4b9f743b209cf9d1a22c822f280572cf190af2eb195d4460c18eeea0de3ffe7c22cf253de3569dd64cb79891a4db8480c788748436a063fef2b065a7",
            "file": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "capitalize",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        },
                        {
                            "name": "firstAndLastOnly",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        },
                        {
                            "name": "delimiter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "' '"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "capitalize",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "firstAndLastOnly",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "delimiter",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "' '",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "initials",
            "sourceCode": "import { Pipe, type PipeTransform } from '@angular/core';\n\nconst toInitial =\n\t(capitalize = true) =>\n\t(word: string) => {\n\t\tconst initial = word.charAt(0);\n\t\treturn capitalize ? initial.toLocaleUpperCase() : initial;\n\t};\n\nconst firstAndLast = (initials: string[]) => `${initials[0]}${initials[initials.length - 1]}`;\n\n@Pipe({\n\tname: 'initials',\n\tstandalone: true,\n})\nexport class InitialsPipe implements PipeTransform {\n\ttransform(name: string, capitalize = true, firstAndLastOnly = true, delimiter = ' '): string {\n\t\tif (!name) return '';\n\n\t\tconst initials = name.trim().split(delimiter).filter(Boolean).map(toInitial(capitalize));\n\n\t\tif (firstAndLastOnly && initials.length > 1) return firstAndLast(initials);\n\n\t\treturn initials.join('');\n\t}\n}"
        }
    ],
    "interfaces": [
        {
            "name": "BrnButtonConfig",
            "id": "interface-BrnButtonConfig-1f8ec02477cbf91e551b33fcc1eeac0135052dc24feb92aad3d684b701ee97e9b7c85f729fb9f3a560ae8411e80d6b33c1ce8ebe49ca4d2385fd0c107ef00237",
            "file": "src/app/@core/ui/button/ui-button.token.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, ValueProvider, inject } from '@angular/core';\nimport type { ButtonVariants } from './ui-button.directive';\n\nexport interface BrnButtonConfig {\n\tvariant: ButtonVariants['variant'];\n\tsize: ButtonVariants['size'];\n}\n\nconst defaultConfig: BrnButtonConfig = {\n\tvariant: 'default',\n\tsize: 'default',\n};\n\nconst BrnButtonConfigToken = new InjectionToken<BrnButtonConfig>('BrnButtonConfig');\n\nexport function provideBrnButtonConfig(config: Partial<BrnButtonConfig>): ValueProvider {\n\treturn { provide: BrnButtonConfigToken, useValue: { ...defaultConfig, ...config } };\n}\n\nexport function injectBrnButtonConfig(): BrnButtonConfig {\n\treturn inject(BrnButtonConfigToken, { optional: true }) ?? defaultConfig;\n}",
            "properties": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonVariants",
                    "indexKey": "size",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonVariants",
                    "indexKey": "variant",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UIIconConfig",
            "id": "interface-UIIconConfig-598287cd4c31855554cb50ebf7309ab0f95e2fa83dde1afd44926634d9e4794533885ee5422004d592d0533f2cf5f30af4aea03fdc9a071a77b25785c7bf2d93",
            "file": "src/app/@core/ui/icon/ui-icon.token.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken, ValueProvider, inject } from '@angular/core';\nimport type { IconSize } from './ui-icon.directive';\n\nexport interface UIIconConfig {\n\tsize: IconSize;\n}\n\nconst defaultConfig: UIIconConfig = {\n\tsize: 'base',\n};\n\nconst UIIconConfigToken = new InjectionToken<UIIconConfig>('UIIconConfig');\n\nexport function provideUIIconConfig(config: Partial<UIIconConfig>): ValueProvider {\n\treturn { provide: UIIconConfigToken, useValue: { ...defaultConfig, ...config } };\n}\n\nexport function injectUIIconConfig(): UIIconConfig {\n\treturn inject(UIIconConfigToken, { optional: true }) ?? defaultConfig;\n}",
            "properties": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BrnAvatarFallbackDirective",
            "id": "directive-BrnAvatarFallbackDirective-c9153bd7debc5ca568766d17b85b4c704eb5acaec06dcd5b8c6022347f787ac18798ee1d1fa070198e3dcd93558a6b58f6962a58a8f1e9abeb955480696da59d",
            "file": "src/app/@core/ui/avatar/brn/fallback/brn-avatar-fallback.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, booleanAttribute, inject, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\n\n@Directive({\n\tselector: '[brnAvatarFallback]',\n\tstandalone: true,\n\texportAs: 'avatarFallback',\n})\nexport class BrnAvatarFallbackDirective {\n\tprivate readonly _element = inject(ElementRef).nativeElement;\n\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tpublic readonly autoColor = input<boolean, BooleanInput>(false, { transform: booleanAttribute });\n\n\tgetTextContent(): string {\n\t\treturn this._element.textContent;\n\t}\n}",
            "selector": "[brnAvatarFallback]",
            "providers": [],
            "exportAs": "avatarFallback",
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_element",
                    "defaultValue": "inject(ElementRef).nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "autoColor",
                    "defaultValue": "input<boolean, BooleanInput>(false, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getTextContent",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "BrnAvatarImageDirective",
            "id": "directive-BrnAvatarImageDirective-b7eee794cd056d11b35af6f688a7992e3d0bcf15a69b141efc173ef0602e42cd3a432619121da0ce8c10d112c77205822e2738c100dd30e28616d7c8f6ba15ac",
            "file": "src/app/@core/ui/avatar/brn/image/brn-avatar-image.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener, computed, signal } from '@angular/core';\n\n@Directive({\n\tselector: 'img[brnAvatarImage]',\n\tstandalone: true,\n\texportAs: 'avatarImage',\n})\nexport class BrnAvatarImageDirective {\n\tprivate readonly _loaded = signal(false);\n\n\t@HostListener('error')\n\tprivate onError() {\n\t\tthis._loaded.set(false);\n\t}\n\n\t@HostListener('load')\n\tprivate onLoad() {\n\t\tthis._loaded.set(true);\n\t}\n\n\tpublic canShow = computed(() => this._loaded());\n}",
            "selector": "img[brnAvatarImage]",
            "providers": [],
            "exportAs": "avatarImage",
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "error",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                },
                {
                    "name": "load",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                }
            ],
            "propertiesClass": [
                {
                    "name": "_loaded",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "canShow",
                    "defaultValue": "computed(() => this._loaded())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'error'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                },
                {
                    "name": "onLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'load'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "extends": []
        },
        {
            "name": "BrnContextMenuTriggerDirective",
            "id": "directive-BrnContextMenuTriggerDirective-e8bdf3e90785441a39de15d9aa4a9514a453b5ab5aa048d88c447f21ae7d0ba97c94eda59bfdc6adab9c94f017b3e3571d729534afd79e6caccfd7c7903fd787",
            "file": "src/app/@core/ui/menu/brn/brn-context-menu-trigger.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkContextMenuTrigger } from '@angular/cdk/menu';\nimport { Directive, effect, inject, input, type TemplateRef } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BrnMenuAlign, getBrnMenuAlign } from './brn-menu-align';\n\n@Directive({\n\tselector: '[brnCtxMenuTriggerFor]',\n\tstandalone: true,\n\thostDirectives: [CdkContextMenuTrigger],\n})\nexport class BrnContextMenuTriggerDirective {\n\tprivate readonly _cdkTrigger = inject(CdkContextMenuTrigger, { host: true });\n\tpublic brnCtxMenuTriggerFor = input<TemplateRef<unknown> | null>(null);\n\tpublic brnCtxMenuTriggerData = input<unknown>(undefined);\n\tpublic readonly align = input<BrnMenuAlign>(undefined);\n\n\tconstructor() {\n\t\t// once the trigger opens we wait until the next tick and then grab the last position\n\t\t// used to position the menu. we store this in our trigger which the brnMenu directive has\n\t\t// access to through DI\n\t\tthis._cdkTrigger.opened.pipe(takeUntilDestroyed()).subscribe(() =>\n\t\t\tsetTimeout(\n\t\t\t\t() =>\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t((this._cdkTrigger as any)._spartanLastPosition = // eslint-disable-next-line\n\t\t\t\t\t\t(this._cdkTrigger as any).overlayRef._positionStrategy._lastPosition),\n\t\t\t),\n\t\t);\n\n\t\teffect(() => (this._cdkTrigger.menuTemplateRef = this.brnCtxMenuTriggerFor()));\n\t\teffect(() => (this._cdkTrigger.menuData = this.brnCtxMenuTriggerData()));\n\t\teffect(() => {\n\t\t\tconst align = this.align();\n\t\t\tif (!align) return;\n\t\t\tthis._cdkTrigger.menuPosition = getBrnMenuAlign(align);\n\t\t});\n\t}\n}",
            "selector": "[brnCtxMenuTriggerFor]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkContextMenuTrigger"
                }
            ],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "align",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": false
                },
                {
                    "name": "brnCtxMenuTriggerData",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_cdkTrigger",
                    "defaultValue": "inject(CdkContextMenuTrigger, { host: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "align",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": false
                },
                {
                    "name": "brnCtxMenuTriggerData",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "brnCtxMenuTriggerFor",
                    "defaultValue": "input<TemplateRef<unknown> | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            }
        },
        {
            "name": "BrnMenuBarDirective",
            "id": "directive-BrnMenuBarDirective-bfdb903443ce923aa49891de1af586e13220a52f585918bcfc3a58b48f179cf02afdb44a500c15bb406c24b59892f0c52420bd09ec872ae3d4b69630dcde902d",
            "file": "src/app/@core/ui/menu/brn/brn-menu-bar.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuBar } from '@angular/cdk/menu';\nimport { Directive } from '@angular/core';\n\n@Directive({\n\tselector: '[brnMenuBar]',\n\tstandalone: true,\n\thostDirectives: [CdkMenuBar],\n})\nexport class BrnMenuBarDirective {}",
            "selector": "[brnMenuBar]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuBar"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "BrnMenuDirective",
            "id": "directive-BrnMenuDirective-10a719a5d9e7c2afd10fb69bca927bd0b07bee0f2cc6f40b121d0e33267d68351860c6b8cdeabc00a5124a1492bcbbd079f9c13ef723b20d62f6935827f11aef",
            "file": "src/app/@core/ui/menu/brn/brn-menu.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenu } from '@angular/cdk/menu';\nimport { Directive, inject, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Directive({\n\tselector: '[brnMenu],[brnSubMenu]',\n\tstandalone: true,\n\thost: {\n\t\t'[attr.data-state]': '_state()',\n\t\t'[attr.data-side]': '_side()',\n\t},\n\thostDirectives: [CdkMenu],\n})\nexport class BrnMenuDirective {\n\tprivate readonly _host = inject(CdkMenu);\n\n\tprotected readonly _state = signal('open');\n\tprotected readonly _side = signal('top');\n\n\tconstructor() {\n\t\tthis.setSideWithDarkMagic();\n\t\t// this is a best effort, but does not seem to work currently\n\t\t// TODO: figure out a way for us to know the host is about to be closed. might not be possible with CDK\n\t\tthis._host.closed.pipe(takeUntilDestroyed()).subscribe(() => this._state.set('closed'));\n\t}\n\n\tprivate setSideWithDarkMagic() {\n\t\t/**\n\t\t * This is an ugly workaround to at least figure out the correct side of where a submenu\n\t\t * will appear and set the attribute to the host accordingly\n\t\t *\n\t\t * First of all we take advantage of the menu stack not being aware of the root\n\t\t * object immediately after it is added. This code executes before the root element is added,\n\t\t * which means the stack is still empty and the peek method returns undefined.\n\t\t */\n\t\tconst isRoot = this._host.menuStack.peek() === undefined;\n\t\tsetTimeout(() => {\n\t\t\t// our menu trigger directive leaves the last position used for use immediately after opening\n\t\t\t// we can access it here and determine the correct side.\n\t\t\t// eslint-disable-next-line\n\t\t\tconst ps = (this._host as any)._parentTrigger._spartanLastPosition;\n\t\t\tif (!ps) {\n\t\t\t\t// if we have no last position we default to the most likely option\n\t\t\t\t// I hate that we have to do this and hope we can revisit soon and improve\n\t\t\t\tthis._side.set(isRoot ? 'top' : 'left');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst side = isRoot ? ps.originY : ps.originX === 'end' ? 'right' : 'left';\n\t\t\tthis._side.set(side);\n\t\t});\n\t}\n}",
            "selector": "[brnMenu],[brnSubMenu]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenu"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_host",
                    "defaultValue": "inject(CdkMenu)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_side",
                    "defaultValue": "signal('top')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_state",
                    "defaultValue": "signal('open')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setSideWithDarkMagic",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            }
        },
        {
            "name": "BrnMenuGroupDirective",
            "id": "directive-BrnMenuGroupDirective-9808b166f9c1f78775c8ae57c3155d8326ac00a8efaa4ba02b9cb9addd3a061ee89a758c81a63b2878ab34093bf4206c8e5c1ecb69c4b4b0560c38655a398155",
            "file": "src/app/@core/ui/menu/brn/brn-menu-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuGroup } from '@angular/cdk/menu';\nimport { Directive } from '@angular/core';\n\n@Directive({\n\tselector: '[brnMenuGroup]',\n\tstandalone: true,\n\thostDirectives: [CdkMenuGroup],\n})\nexport class BrnMenuGroupDirective {}",
            "selector": "[brnMenuGroup]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuGroup"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "BrnMenuItemCheckboxDirective",
            "id": "directive-BrnMenuItemCheckboxDirective-524a418135d4ff6f424d4bd74ea044f840d7734eb97678471c77a2730ba00d29adf495cf23a27a9c78d22cf60c19ff213da1ebc2a50b6e4025f4352a1d0d9ed0",
            "file": "src/app/@core/ui/menu/brn/brn-menu-item-checkbox.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuItemCheckbox } from '@angular/cdk/menu';\nimport { booleanAttribute, Directive, effect, inject, input } from '@angular/core';\nimport { outputFromObservable } from '@angular/core/rxjs-interop';\n\n@Directive({\n\tselector: '[brnMenuItemCheckbox]',\n\tstandalone: true,\n\thostDirectives: [CdkMenuItemCheckbox],\n\thost: {\n\t\t'[class.checked]': 'checked()',\n\t\t'[disabled]': 'disabled()',\n\t},\n})\nexport class BrnMenuItemCheckboxDirective {\n\tprivate readonly _cdkMenuItem = inject(CdkMenuItemCheckbox);\n\tpublic readonly checked = input(this._cdkMenuItem.checked, { transform: booleanAttribute });\n\tpublic readonly disabled = input(this._cdkMenuItem.disabled, { transform: booleanAttribute });\n\tpublic readonly triggered = outputFromObservable(this._cdkMenuItem.triggered);\n\n\tconstructor() {\n\t\teffect(() => (this._cdkMenuItem.disabled = this.disabled()));\n\t\teffect(() => (this._cdkMenuItem.checked = this.checked()));\n\t}\n}",
            "selector": "[brnMenuItemCheckbox]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuItemCheckbox"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_cdkMenuItem",
                    "defaultValue": "inject(CdkMenuItemCheckbox)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "checked",
                    "defaultValue": "input(this._cdkMenuItem.checked, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "disabled",
                    "defaultValue": "input(this._cdkMenuItem.disabled, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "triggered",
                    "defaultValue": "outputFromObservable(this._cdkMenuItem.triggered)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            }
        },
        {
            "name": "BrnMenuItemDirective",
            "id": "directive-BrnMenuItemDirective-976e51ec783f819c663126a590f3056f3c0215c84cc04237a632bcf63b5b093169e8efc29a875fbc459ff6ca9fce9d5817a3fae9c5eb48bdf81c286b60761385",
            "file": "src/app/@core/ui/menu/brn/brn-menu-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuItem } from '@angular/cdk/menu';\nimport { booleanAttribute, Directive, effect, inject, input } from '@angular/core';\nimport { outputFromObservable } from '@angular/core/rxjs-interop';\n\n@Directive({\n\tselector: '[brnMenuItem]',\n\tstandalone: true,\n\thostDirectives: [CdkMenuItem],\n\thost: {\n\t\t'[disabled]': 'disabled()',\n\t},\n})\nexport class BrnMenuItemDirective {\n\tprivate readonly _cdkMenuItem = inject(CdkMenuItem);\n\tpublic readonly disabled = input(this._cdkMenuItem.disabled, { transform: booleanAttribute });\n\tpublic readonly triggered = outputFromObservable(this._cdkMenuItem.triggered);\n\n\tconstructor() {\n\t\teffect(() => (this._cdkMenuItem.disabled = this.disabled()));\n\t}\n}",
            "selector": "[brnMenuItem]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuItem"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_cdkMenuItem",
                    "defaultValue": "inject(CdkMenuItem)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "disabled",
                    "defaultValue": "input(this._cdkMenuItem.disabled, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "triggered",
                    "defaultValue": "outputFromObservable(this._cdkMenuItem.triggered)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            }
        },
        {
            "name": "BrnMenuItemRadioDirective",
            "id": "directive-BrnMenuItemRadioDirective-2897c41008d7fe2627b63e74b1260e58ee61dd16155b04dbe8b66927069f03de63beb95398741beb8d18ea7718d0056b2ee51ee241ae010ba94825d93e78267a",
            "file": "src/app/@core/ui/menu/brn/brn-menu-item-radio.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuItemRadio } from '@angular/cdk/menu';\nimport { booleanAttribute, Directive, effect, inject, input } from '@angular/core';\nimport { outputFromObservable } from '@angular/core/rxjs-interop';\n\n@Directive({\n\tselector: '[brnMenuItemRadio]',\n\tstandalone: true,\n\thostDirectives: [CdkMenuItemRadio],\n\thost: {\n\t\t'[class.checked]': 'checked()',\n\t\t'[disabled]': 'disabled()',\n\t},\n})\nexport class BrnMenuItemRadioDirective {\n\tprivate readonly _cdkMenuItem = inject(CdkMenuItemRadio);\n\tpublic readonly checked = input(this._cdkMenuItem.checked, { transform: booleanAttribute });\n\tpublic readonly disabled = input(this._cdkMenuItem.disabled, { transform: booleanAttribute });\n\tpublic readonly triggered = outputFromObservable(this._cdkMenuItem.triggered);\n\n\tconstructor() {\n\t\teffect(() => (this._cdkMenuItem.disabled = this.disabled()));\n\t\teffect(() => (this._cdkMenuItem.checked = this.checked()));\n\t}\n}",
            "selector": "[brnMenuItemRadio]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuItemRadio"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_cdkMenuItem",
                    "defaultValue": "inject(CdkMenuItemRadio)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "checked",
                    "defaultValue": "input(this._cdkMenuItem.checked, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "disabled",
                    "defaultValue": "input(this._cdkMenuItem.disabled, { transform: booleanAttribute })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "triggered",
                    "defaultValue": "outputFromObservable(this._cdkMenuItem.triggered)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            }
        },
        {
            "name": "BrnMenuTriggerDirective",
            "id": "directive-BrnMenuTriggerDirective-16096f52aee01b6c89710232b1e4d43abb532aa439c2f65cd02ac6e7c002dd490cee1e26b8c06ca215b3429d6c5bc9895a465e4ce1b54c58ffb580fd9a7a9c9f",
            "file": "src/app/@core/ui/menu/brn/brn-menu-trigger.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CdkMenuTrigger } from '@angular/cdk/menu';\nimport { Directive, effect, inject, input } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BrnMenuAlign, getBrnMenuAlign } from './brn-menu-align';\n\n@Directive({\n\tselector: '[brnMenuTriggerFor]',\n\tstandalone: true,\n\thostDirectives: [\n\t\t{\n\t\t\tdirective: CdkMenuTrigger,\n\t\t\tinputs: ['cdkMenuTriggerFor: brnMenuTriggerFor', 'cdkMenuTriggerData: brnMenuTriggerData'],\n\t\t\toutputs: ['cdkMenuOpened: brnMenuOpened', 'cdkMenuClosed: brnMenuClosed'],\n\t\t},\n\t],\n})\nexport class BrnMenuTriggerDirective {\n\tprivate readonly _cdkTrigger = inject(CdkMenuTrigger, { host: true });\n\tpublic readonly align = input<BrnMenuAlign>(undefined);\n\n\tconstructor() {\n\t\t// once the trigger opens we wait until the next tick and then grab the last position\n\t\t// used to position the menu. we store this in our trigger which the brnMenu directive has\n\t\t// access to through DI\n\t\tthis._cdkTrigger.opened.pipe(takeUntilDestroyed()).subscribe(() =>\n\t\t\tsetTimeout(\n\t\t\t\t() =>\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t((this._cdkTrigger as any)._spartanLastPosition = // eslint-disable-next-line\n\t\t\t\t\t\t(this._cdkTrigger as any).overlayRef._positionStrategy._lastPosition),\n\t\t\t),\n\t\t);\n\n\t\teffect(() => {\n\t\t\tconst align = this.align();\n\t\t\tif (!align) return;\n\t\t\tthis._cdkTrigger.menuPosition = getBrnMenuAlign(align);\n\t\t});\n\t}\n}",
            "selector": "[brnMenuTriggerFor]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "CdkMenuTrigger",
                    "inputs": [
                        "cdkMenuTriggerFor: brnMenuTriggerFor",
                        "cdkMenuTriggerData: brnMenuTriggerData"
                    ],
                    "outputs": [
                        "cdkMenuOpened: brnMenuOpened",
                        "cdkMenuClosed: brnMenuClosed"
                    ]
                }
            ],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "align",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_cdkTrigger",
                    "defaultValue": "inject(CdkMenuTrigger, { host: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "align",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            }
        },
        {
            "name": "UIAspectRatioDirective",
            "id": "directive-UIAspectRatioDirective-cfe8ec76687ecc57c46302c41383e16cfa5b7767b4876030f1adb63ef68928f2cd0bdfe68428891505706bf68f0684dbfb69fa1c58463a24e030ed632fed30f8",
            "file": "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { type NumberInput, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { type AfterViewInit, Directive, ElementRef, computed, inject, input } from '@angular/core';\nimport { cn } from '@utils/cn';\nimport type { ClassValue } from 'clsx';\n\nconst parseDividedString = (value: NumberInput): NumberInput => {\n\tif (typeof value !== 'string' || !value.includes('/')) return value;\n\treturn value\n\t\t.split('/')\n\t\t.map((v) => Number.parseInt(v, 10))\n\t\t.reduce((a, b) => a / b);\n};\n\n@Directive({\n\tselector: '[uiAspectRatio]',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t\t'[style.padding-bottom]': '_computedPaddingBottom()',\n\t},\n})\nexport class UIAspectRatioDirective implements AfterViewInit {\n\tprivate readonly _el = inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n\n\tpublic readonly ratio = input(1, {\n\t\talias: 'uiAspectRatio',\n\t\ttransform: (value: NumberInput) => {\n\t\t\tconst coerced = coerceNumberProperty(parseDividedString(value));\n\t\t\treturn coerced <= 0 ? 1 : coerced;\n\t\t},\n\t});\n\tprotected readonly _computedPaddingBottom = computed(() => `${100 / this.ratio()}%`);\n\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected readonly _computedClass = computed(() => cn('relative w-full', this.userClass()));\n\n\tngAfterViewInit() {\n\t\t// support delayed addition of image to dom\n\t\tconst child = this._el.firstElementChild;\n\t\tif (child) {\n\t\t\tchild.classList.add('absolute', 'w-full', 'h-full', 'object-cover');\n\t\t}\n\t}\n}",
            "selector": "[uiAspectRatio]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn('relative w-full', this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_computedPaddingBottom",
                    "defaultValue": "computed(() => `${100 / this.ratio()}%`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_el",
                    "defaultValue": "inject<ElementRef<HTMLElement>>(ElementRef).nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "ratio",
                    "defaultValue": "input(1, {\n\t\talias: 'uiAspectRatio',\n\t\ttransform: (value: NumberInput) => {\n\t\t\tconst coerced = coerceNumberProperty(parseDividedString(value));\n\t\t\treturn coerced <= 0 ? 1 : coerced;\n\t\t},\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "UIAvatarFallbackDirective",
            "id": "directive-UIAvatarFallbackDirective-d4bebd6dfa06d1aac15450ec462c0aad0b77cd515106e36447294eff7d7e465f00f30f0ed0da83da67cd4bb8abd5b69cdcd0ab85719758be608adef690dc6176",
            "file": "src/app/@core/ui/avatar/fallback/ui-avatar-fallback.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, inject } from '@angular/core';\nimport { BrnAvatarFallbackDirective, hexColorFor, isBright } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Directive({\n\tselector: '[uiAvatarFallback]',\n\tstandalone: true,\n\texportAs: 'avatarFallback',\n\thostDirectives: [\n\t\t{\n\t\t\tdirective: BrnAvatarFallbackDirective,\n\t\t\tinputs: ['class:class', 'autoColor:autoColor'],\n\t\t},\n\t],\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t\t'[style.backgroundColor]': \"_hex() || ''\",\n\t},\n})\nexport class UIAvatarFallbackDirective {\n\tprivate readonly _brn = inject(BrnAvatarFallbackDirective);\n\tprivate readonly _hex = computed(() => {\n\t\tif (!this._brn.autoColor() || !this._brn.getTextContent()) return;\n\t\treturn hexColorFor(this._brn.getTextContent());\n\t});\n\n\tprivate readonly _autoColorTextCls = computed(() => {\n\t\tconst hex = this._hex();\n\t\tif (!hex) return;\n\t\treturn `${isBright(hex) ? 'text-black' : 'text-white'}`;\n\t});\n\n\tprotected readonly _computedClass = computed(() => {\n\t\treturn cn(\n\t\t\t'flex h-full w-full items-center justify-center',\n\t\t\tthis._autoColorTextCls() ?? 'bg-muted',\n\t\t\tthis._brn?.userClass(),\n\t\t);\n\t});\n}",
            "selector": "[uiAvatarFallback]",
            "providers": [],
            "exportAs": "avatarFallback",
            "hostDirectives": [
                {
                    "name": "BrnAvatarFallbackDirective",
                    "inputs": [
                        "class:class",
                        "autoColor:autoColor"
                    ],
                    "outputs": []
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_autoColorTextCls",
                    "defaultValue": "computed(() => {\n\t\tconst hex = this._hex();\n\t\tif (!hex) return;\n\t\treturn `${isBright(hex) ? 'text-black' : 'text-white'}`;\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_brn",
                    "defaultValue": "inject(BrnAvatarFallbackDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => {\n\t\treturn cn(\n\t\t\t'flex h-full w-full items-center justify-center',\n\t\t\tthis._autoColorTextCls() ?? 'bg-muted',\n\t\t\tthis._brn?.userClass(),\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_hex",
                    "defaultValue": "computed(() => {\n\t\tif (!this._brn.autoColor() || !this._brn.getTextContent()) return;\n\t\treturn hexColorFor(this._brn.getTextContent());\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIAvatarImageDirective",
            "id": "directive-UIAvatarImageDirective-e44f87eb68cd5802035ca7fb4f0eb6126be38d1bcc03b524af23d33ffb0c8fc007ed53460894a1d378acb2de4d93cfd80806d821f530114cbb71e2d9550ff39d",
            "file": "src/app/@core/ui/avatar/image/ui-avatar-image.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, inject, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { BrnAvatarImageDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Directive({\n\tselector: 'img[uiAvatarImage]',\n\tstandalone: true,\n\texportAs: 'avatarImage',\n\thostDirectives: [BrnAvatarImageDirective],\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIAvatarImageDirective {\n\tpublic canShow = inject(BrnAvatarImageDirective).canShow;\n\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn('aspect-square object-cover h-full w-full', this.userClass()));\n}",
            "selector": "img[uiAvatarImage]",
            "providers": [],
            "exportAs": "avatarImage",
            "hostDirectives": [
                {
                    "name": "BrnAvatarImageDirective"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn('aspect-square object-cover h-full w-full', this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "canShow",
                    "defaultValue": "inject(BrnAvatarImageDirective).canShow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIButtonDirective",
            "id": "directive-UIButtonDirective-abca646025859f401fffa82123d7705706ffa48b1be2ce3565c44a2c99c24a2ca147991e7951d0e09ace4ca11efd926812d1e2854fde3ec581104d94dc81075a",
            "file": "src/app/@core/ui/button/ui-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input, signal, ElementRef } from '@angular/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { injectBrnButtonConfig } from './ui-button.token';\nimport { cn } from '@utils/cn';\n\nexport const buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n);\nexport type ButtonVariants = VariantProps<typeof buttonVariants>;\n\n@Directive({\n\tselector: 'button[uiBtn], a[uiBtn]',\n\tstandalone: true,\n\texportAs: 'uiBtn',\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t\t'(click)': '_handleDisabledClick($event)',\n\t},\n})\nexport class UIButtonDirective {\n\tprivate readonly _config = injectBrnButtonConfig();\n\tprivate readonly _additionalClasses = signal<ClassValue>('');\n\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tpublic readonly variant = input<ButtonVariants['variant']>(this._config.variant);\n\tpublic readonly size = input<ButtonVariants['size']>(this._config.size);\n\n\tprotected readonly _computedClass = computed(() =>\n\t\tcn(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t);\n\n\tconstructor(private elementRef: ElementRef) {\n\t\tconst nativeElement = this.elementRef.nativeElement;\n\t\tif (!(nativeElement instanceof HTMLButtonElement || nativeElement instanceof HTMLAnchorElement)) {\n\t\t\tthrow new Error('uiBtn só pode ser usado em <button> ou <a>.');\n\t\t}\n\t}\n\n\tsetClass(classes: string): void {\n\t\tthis._additionalClasses.set(classes);\n\t}\n\n\tprivate _handleDisabledClick(event: Event): void {\n\t\tconst element = this.elementRef.nativeElement as HTMLButtonElement | HTMLAnchorElement;\n\t\tif (element.hasAttribute('disabled')) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\t}\n}",
            "selector": "button[uiBtn], a[uiBtn]",
            "providers": [],
            "exportAs": "uiBtn",
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_additionalClasses",
                    "defaultValue": "signal<ClassValue>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_config",
                    "defaultValue": "injectBrnButtonConfig()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input<ButtonVariants['size']>(this._config.size)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "variant",
                    "defaultValue": "input<ButtonVariants['variant']>(this._config.variant)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleDisabledClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setClass",
                    "args": [
                        {
                            "name": "classes",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "classes",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UIIconDirective",
            "id": "directive-UIIconDirective-291ce0b8549a643e889c1fd6114b3c6afc6a395308f8d1d670cb9aa76ab704f5d6494acc99957ac56d26beb0b83a22207082e0171a3fc01fb189630bba7a8089",
            "file": "src/app/@core/ui/icon/ui-icon.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport { injectUIIconConfig } from './ui-icon.token';\n\nexport type IconSize = 'xs' | 'sm' | 'base' | 'lg' | 'xl' | 'none' | (Record<never, never> & string);\n\n@Directive({\n\tselector: 'ng-icon[ui]',\n\tstandalone: true,\n\thost: {\n\t\t'[style.--ng-icon__size]': '_computedSize()',\n\t},\n})\nexport class UIIconDirective {\n\tprivate readonly _config = injectUIIconConfig();\n\tpublic readonly size = input<IconSize>(this._config.size);\n\n\tprotected readonly _computedSize = computed(() => {\n\t\tconst size = this.size();\n\n\t\tswitch (size) {\n\t\t\tcase 'xs':\n\t\t\t\treturn '12px';\n\t\t\tcase 'sm':\n\t\t\t\treturn '16px';\n\t\t\tcase 'md':\n\t\t\t\treturn '20px';\n\t\t\tcase 'base':\n\t\t\t\treturn '24px';\n\t\t\tcase 'lg':\n\t\t\t\treturn '32px';\n\t\t\tcase 'xl':\n\t\t\t\treturn '48px';\n\t\t\tdefault: {\n\t\t\t\treturn size;\n\t\t\t}\n\t\t}\n\t});\n}",
            "selector": "ng-icon[ui]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedSize",
                    "defaultValue": "computed(() => {\n\t\tconst size = this.size();\n\n\t\tswitch (size) {\n\t\t\tcase 'xs':\n\t\t\t\treturn '12px';\n\t\t\tcase 'sm':\n\t\t\t\treturn '16px';\n\t\t\tcase 'md':\n\t\t\t\treturn '20px';\n\t\t\tcase 'base':\n\t\t\t\treturn '24px';\n\t\t\tcase 'lg':\n\t\t\t\treturn '32px';\n\t\t\tcase 'xl':\n\t\t\t\treturn '48px';\n\t\t\tdefault: {\n\t\t\t\treturn size;\n\t\t\t}\n\t\t}\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_config",
                    "defaultValue": "injectUIIconConfig()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input<IconSize>(this._config.size)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIMenuBarItemDirective",
            "id": "directive-UIMenuBarItemDirective-70f7f35d4bd26b106b568f020335261ae897e70c7a7f19fc9c3b59c401f40f6552cabfcf9b63f71fe255990f44a8f3c3f21858e97edd2d9ec28b5e1637bf8d10",
            "file": "src/app/@core/ui/menu/directives/ui-menu-bar-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuItemDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Directive({\n\tselector: '[uiMenuBarItem]',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [BrnMenuItemDirective],\n})\nexport class UIMenuBarItemDirective {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn(\n\t\t\t'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground aria-expanded:bg-accent aria-expanded:text-accent-foreground',\n\t\t\tthis.userClass(),\n\t\t),\n\t);\n}",
            "selector": "[uiMenuBarItem]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuItemDirective"
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(\n\t\t\t'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground aria-expanded:bg-accent aria-expanded:text-accent-foreground',\n\t\t\tthis.userClass(),\n\t\t),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIMenuItemCheckboxDirective",
            "id": "directive-UIMenuItemCheckboxDirective-651dfb6c96ca7a1ef386458a7570bc6b78c0603aa5087157a3385efb8c25759ebd17b0006b54257831f03c36e4599dc12f78a8cfb0faa68ccb8a802d84c1de6a",
            "file": "src/app/@core/ui/menu/directives/ui-menu-item-checkbox.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport { cn } from '@utils/cn';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuItemCheckboxDirective } from '../brn';\n\n@Directive({\n  selector: '[uiMenuItemCheckbox]',\n  standalone: true,\n  host: {\n    '[class]': '_computedClass()',\n  },\n  hostDirectives: [\n    {\n      directive: BrnMenuItemCheckboxDirective,\n      inputs: ['disabled: disabled', 'checked: checked'],\n      outputs: ['triggered: triggered'],\n    },\n  ],\n})\nexport class UIMenuItemCheckboxDirective {\n  public readonly userClass = input<ClassValue>('', { alias: 'class' });\n  protected _computedClass = computed(() =>\n    cn(\n      'group w-full relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n      this.userClass()\n    )\n  );\n}\n",
            "selector": "[uiMenuItemCheckbox]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuItemCheckboxDirective",
                    "inputs": [
                        "disabled: disabled",
                        "checked: checked"
                    ],
                    "outputs": [
                        "triggered: triggered"
                    ]
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n    cn(\n      'group w-full relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n      this.userClass()\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIMenuItemDirective",
            "id": "directive-UIMenuItemDirective-a7a7794eb4eb3bcc86b7a5f5882277d0c5b89e9c1aac6e6532c4774bc080ef7f9086fa16f8c67ac95baedea9e801d4f26389455d9afd2ca9e22101d8c92419cd",
            "file": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, booleanAttribute, computed, input, signal } from '@angular/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuItemDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\nexport const hlmMenuItemVariants = cva(\n\t'group w-full relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: { inset: { true: 'pl-8', false: '' } },\n\t\tdefaultVariants: { inset: false },\n\t},\n);\nexport type HlmMenuItemVariants = VariantProps<typeof hlmMenuItemVariants>;\n\n@Directive({\n\tselector: '[uiMenuItem]',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [\n\t\t{\n\t\t\tdirective: BrnMenuItemDirective,\n\t\t\tinputs: ['disabled: disabled'],\n\t\t\toutputs: ['triggered: triggered'],\n\t\t},\n\t],\n})\nexport class UIMenuItemDirective {\n\tprivate readonly _inset = signal<boolean>(false);\n\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn(hlmMenuItemVariants({ inset: this._inset() }), this.userClass()));\n\n\t@Input({ transform: booleanAttribute })\n\tpublic set inset(value: boolean) {\n\t\tthis._inset.set(value);\n\t}\n}",
            "selector": "[uiMenuItem]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuItemDirective",
                    "inputs": [
                        "disabled: disabled"
                    ],
                    "outputs": [
                        "triggered: triggered"
                    ]
                }
            ],
            "standalone": true,
            "inputsClass": [
                {
                    "required": false,
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn(hlmMenuItemVariants({ inset: this._inset() }), this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "_inset",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "inset": {
                    "name": "inset",
                    "setSignature": {
                        "name": "inset",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 37,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "UIMenuItemIconDirective",
            "id": "directive-UIMenuItemIconDirective-ea64dec4d8ad592a98a0335d2d8165e72d057bfa9c9ede72b223ad90204619ab1df2d69a91eb9f0d500e8ce639e3fe0e01e26d4c46fe42dceb752db30aa80e91",
            "file": "src/app/@core/ui/menu/directives/ui-menu-item-icon.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { provideUIIconConfig } from '../../icon';\nimport { cn } from '@utils/cn';\n\n@Directive({\n\tselector: '[uiMenuIcon]',\n\tstandalone: true,\n\tproviders: [provideUIIconConfig({ size: 'sm' })],\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuItemIconDirective {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn('mr-2', this.userClass()));\n}",
            "selector": "[uiMenuIcon]",
            "providers": [
                {
                    "name": "provideUIIconConfig({ size:  })"
                }
            ],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn('mr-2', this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UIMenuItemRadioDirective",
            "id": "directive-UIMenuItemRadioDirective-9d77565ce9f2507e1e9653901673fd75c7e24e25ec2f3d11164d34e440695764b3f861af26a283b28899fbbe1ce05401b932b82278cdd2faa5134a05fb9c2056",
            "file": "src/app/@core/ui/menu/directives/ui-menu-item-radio.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuItemRadioDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Directive({\n\tselector: '[uiMenuItemRadio]',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [\n\t\t{\n\t\t\tdirective: BrnMenuItemRadioDirective,\n\t\t\tinputs: ['disabled: disabled', 'checked: checked'],\n\t\t\toutputs: ['triggered: triggered'],\n\t\t},\n\t],\n})\nexport class UIMenuItemRadioDirective {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn(\n\t\t\t'group w-full relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n\t\t\tthis.userClass(),\n\t\t),\n\t);\n}",
            "selector": "[uiMenuItemRadio]",
            "providers": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuItemRadioDirective",
                    "inputs": [
                        "disabled: disabled",
                        "checked: checked"
                    ],
                    "outputs": [
                        "triggered: triggered"
                    ]
                }
            ],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(\n\t\t\t'group w-full relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n\t\t\tthis.userClass(),\n\t\t),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        },
        {
            "name": "UITypographyDirective",
            "id": "directive-UITypographyDirective-ead30edc7847fd4c338421d7fe2714bb749161033b8ee67d3c300bc6eb90d934bc15d502c5ed434b0843ae80d645f0cac11b5533a8dc3ceb5900653db42aafdd",
            "file": "src/app/@core/ui/typography/ui-typography.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, computed, input } from '@angular/core';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { cn } from '@utils/cn';\n\nconst typographyVariants = cva('', {\n  variants: {\n    variant: {\n      h1: 'scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl',\n      h2: 'scroll-m-20 border-border border-b pb-2 text-3xl font-semibold tracking-tight transition-colors first:mt-0',\n      h3: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      h4: 'scroll-m-20 text-xl font-semibold tracking-tight',\n      large: 'text-lg font-semibold',\n      lead: 'text-xl text-muted-foreground',\n      muted: 'text-sm text-muted-foreground',\n      p: 'leading-7 [&:not(:first-child)]:mt-6',\n      small: 'text-sm font-medium leading-none',\n      blockquote: 'mt-6 border-border border-l-2 pl-6 italic',\n      code: 'relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold',\n      ul: 'my-6 ml-6 list-disc [&>li]:mt-2',\n    },\n  },\n  defaultVariants: {\n    variant: 'p',\n  },\n});\n\nexport type TypographyVariants = VariantProps<typeof typographyVariants>;\n\n@Directive({\n  selector: '[typography]',\n  standalone: true,\n  host: {\n    '[class]': '_computedClass()',\n  },\n})\nexport class UITypographyDirective {\n  public readonly userClass = input<ClassValue>('', { alias: 'userClassName' });\n  public readonly variant = input<TypographyVariants['variant']>('p');\n\n  protected _computedClass = computed(() =>\n    cn(typographyVariants({ variant: this.variant() }), this.userClass())\n  );\n}",
            "selector": "[typography]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n    cn(typographyVariants({ variant: this.variant() }), this.userClass())\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'userClassName' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "variant",
                    "defaultValue": "input<TypographyVariants['variant']>('p')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "extends": []
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8b0ef9f8e426d49a952cf5e24038d8bfa473f6e4b802d51ce42c3cda38a72350e829510227bbf8de20d8ed763b1dc04c440e17fb8f1ee8fe420350fefe6a4a4c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-tailwind-v4'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "SidebarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { UIButtonDirective } from './@core/ui/button';\nimport { HeaderComponent } from './@core/layout/header/header.component';\nimport { SidebarComponent } from './@core/layout/sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [HeaderComponent, SidebarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'angular-tailwind-v4';\n}\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<dashboard-header></dashboard-header>\n<main class=\"flex-1\">\n  <app-sidebar></app-sidebar>\n</main>"
        },
        {
            "name": "AvatarDropdown",
            "id": "component-AvatarDropdown-ae2b87c4f936877b35d1dba904efa0ed9ea00108123043c24c0f160efc9cd5b5a3a1900222ade223453cd54a2f772846606a8c01acc83338180892e558775fa8",
            "file": "src/app/@core/layout/header/avatar-menu/avatar-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({\n    lucideUser, lucideLayers, lucideCog, lucideKeyboard, lucideCircleUser, lucideSmile, lucidePlus, lucideGithub, lucideCircleHelp, lucideCode, lucideLogOut, lucideMail, lucideMessageSquare, lucideCirclePlus,\n})"
                }
            ],
            "selector": "avatar-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./avatar-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "BrnMenuTriggerDirective",
                    "type": "directive"
                },
                {
                    "name": "UIMenuComponent",
                    "type": "component"
                },
                {
                    "name": "UIMenuItemDirective",
                    "type": "directive"
                },
                {
                    "name": "UIMenuLabelComponent",
                    "type": "component"
                },
                {
                    "name": "UIMenuSeparatorComponent",
                    "type": "component"
                },
                {
                    "name": "UIMenuItemIconDirective",
                    "type": "directive"
                },
                {
                    "name": "UIMenuGroupComponent",
                    "type": "component"
                },
                {
                    "name": "UIButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                },
                {
                    "name": "UIAvatarComponent",
                    "type": "component"
                },
                {
                    "name": "UIAvatarFallbackDirective",
                    "type": "directive"
                },
                {
                    "name": "UITypographyDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport {\n  lucideCircleUser,\n  lucideLayers,\n  lucideMessageSquare,\n  lucideCode,\n  lucideMail,\n  lucideLogOut,\n  lucideSmile,\n  lucideCog,\n  lucideGithub,\n  lucideKeyboard,\n  lucideUser,\n  lucidePlus,\n  lucideCirclePlus,\n  lucideCircleHelp,\n} from '@ng-icons/lucide';\nimport { UIAvatarComponent, UIAvatarFallbackDirective, UIAvatarImageDirective } from 'src/app/@core/ui/avatar';\nimport { UIButtonDirective } from 'src/app/@core/ui/button';\nimport { UIIconDirective } from 'src/app/@core/ui/icon';\nimport { BrnMenuTriggerDirective } from 'src/app/@core/ui/menu/brn';\nimport { UIMenuGroupComponent } from 'src/app/@core/ui/menu/components/ui-menu-group.component';\nimport { UIMenuItemSubIndicatorComponent } from 'src/app/@core/ui/menu/components/ui-menu-item-sub-indicator.component';\nimport { UIMenuLabelComponent } from 'src/app/@core/ui/menu/components/ui-menu-label.component';\nimport { UIMenuSeparatorComponent } from 'src/app/@core/ui/menu/components/ui-menu-separator.component';\nimport { UIMenuShortcutComponent } from 'src/app/@core/ui/menu/components/ui-menu-shortcut.component';\nimport { UIMenuComponent } from 'src/app/@core/ui/menu/components/ui-menu.component';\nimport { UISubMenuComponent } from 'src/app/@core/ui/menu/components/ui-sub-menu.component';\nimport { UIMenuItemIconDirective } from 'src/app/@core/ui/menu/directives/ui-menu-item-icon.directive';\nimport { UIMenuItemDirective } from 'src/app/@core/ui/menu/directives/ui-menu-item.directive';\nimport { UITypographyDirective } from 'src/app/@core/ui/typography/ui-typography.directive';\n\n@Component({\n  selector: 'avatar-dropdown',\n  standalone: true,\n  imports: [\n    NgIcon,\n    BrnMenuTriggerDirective,\n    UIMenuComponent,\n    UIMenuItemDirective,\n    UIMenuLabelComponent,\n    UIMenuSeparatorComponent,\n    UIMenuItemIconDirective,\n    UIMenuGroupComponent,\n    UIButtonDirective,\n    UIIconDirective,\n    UIAvatarComponent,\n    UIAvatarFallbackDirective,\n    UITypographyDirective\n  ],\n  providers: [\n    provideIcons({\n      lucideUser,\n      lucideLayers,\n      lucideCog,\n      lucideKeyboard,\n      lucideCircleUser,\n      lucideSmile,\n      lucidePlus,\n      lucideGithub,\n      lucideCircleHelp,\n      lucideCode,\n      lucideLogOut,\n      lucideMail,\n      lucideMessageSquare,\n      lucideCirclePlus,\n    }),\n  ],\n  templateUrl: './avatar-menu.component.html',\n})\nexport class AvatarDropdown {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex w-full items-center justify-center\">\n  <button\n    uiBtn\n    variant=\"ghost\"\n    size=\"icon\"\n    [align]=\"'end'\"\n    [brnMenuTriggerFor]=\"menu\"\n    class=\"rounded-full p-0.5\"\n  >\n    <ui-avatar variant=\"small\">\n      <img\n        uiAvatarImage\n        src=\"/assets/avatar.png\"\n        alt=\"spartan logo. Resembling a spartanic shield\"\n      />\n      <span uiAvatarFallback class=\"bg-[#FD005B] text-white\">RG</span>\n    </ui-avatar>\n  </button>\n</div>\n<ng-template #menu>\n  <ui-menu class=\"max-w-64\">\n    <ui-menu-label class=\"flex items-center gap-2\">\n      <ui-avatar variant=\"medium\" [class]=\"true\" class=\"rounded-md\">\n        <img\n          uiAvatarImage\n          src=\"/assets/avatar.png\"\n          alt=\"spartan logo. Resembling a spartanic shield\"\n        />\n        <span uiAvatarFallback class=\"bg-[#FD005B] text-white\">RG</span>\n      </ui-avatar>\n      <div class=\"flex flex-col overflow-hidden w-full\">\n        <p typography class=\"text-sm\">Luan Severo</p>\n        <p typography variant=\"muted\" class=\"truncate text-xs\">luan.gomesforestoken.com.br</p>\n      </div>\n    </ui-menu-label>\n    <ui-menu-separator />\n    <ui-menu-group>\n      <button uiMenuItem>\n        <ng-icon ui name=\"lucideUser\" uiMenuIcon />\n        <span>Perfil</span>\n      </button>\n    </ui-menu-group>\n\n    <ui-menu-separator />\n\n    <button uiMenuItem>\n      <ng-icon uiMenuIcon name=\"lucideLogOut\" />\n      <span>Desconectar</span>\n    </button>\n  </ui-menu>\n</ng-template>\n"
        },
        {
            "name": "BrnAvatarComponent",
            "id": "component-BrnAvatarComponent-177c5e94c4eee5f5c3b8cb34a51c80dc91f334dc527314c48d57c639845e384f0cc82366244bc0bc196e89a70cd4345baebba234f14b4f1fbb63123168b84e78",
            "file": "src/app/@core/ui/avatar/brn/brn-avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "brn-avatar",
            "styleUrls": [],
            "styles": [],
            "template": "@if (image()?.canShow()) {\n\t<ng-content select=\"[brnAvatarImage]\" />\n} @else {\n\t<ng-content select=\"[brnAvatarFallback]\" />\n}\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "image",
                    "defaultValue": "contentChild(BrnAvatarImageDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewEncapsulation, contentChild } from '@angular/core';\nimport { BrnAvatarImageDirective } from './image';\n\n@Component({\n\tselector: 'brn-avatar',\n\tstandalone: true,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\ttemplate: `\n\t\t@if (image()?.canShow()) {\n\t\t\t<ng-content select=\"[brnAvatarImage]\" />\n\t\t} @else {\n\t\t\t<ng-content select=\"[brnAvatarFallback]\" />\n\t\t}\n\t`,\n})\nexport class BrnAvatarComponent {\n\tprotected readonly image = contentChild(BrnAvatarImageDirective);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-b3df38308017fed046e37864356e51eb5c7926278191781512731e17a747e6261c67cfbd76f3acf7f676c1d200e26780a74fb7f3eb407f9883fcaea15406d81b-1",
            "file": "src/app/@core/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({ lucideLayoutGrid })"
                }
            ],
            "selector": "dashboard-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "UIButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                },
                {
                    "name": "AvatarDropdown"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { UIButtonDirective } from '../../ui/button';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { lucideLayoutGrid } from '@ng-icons/lucide';\nimport { UIIconDirective } from '../../ui/icon';\nimport { AvatarDropdown } from './avatar-menu/avatar-menu.component';\n\n@Component({\n  selector: 'dashboard-header',\n  imports: [UIButtonDirective, NgIcon, UIIconDirective, AvatarDropdown],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.css',\n  providers: [provideIcons({lucideLayoutGrid})]\n})\nexport class HeaderComponent {\n\n}\n",
            "styleUrl": "./header.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header\n  class=\"flex items-center justify-between border-b px-2 py-2 border-border bg-sidebar\"\n>\n  <div class=\"flex gap-2 md:flex-1 ps-2\">\n    <button uiBtn variant=\"ghost\" size=\"icon\">\n      <ng-icon ui name=\"lucideLayoutGrid\" />\n    </button>\n    <a href=\"/\" class=\"max-w-32 w-full flex items-center justify-center ms-4\">\n      <img class=\"w-fit\" alt=\"Logo\" src=\"/logo.png\" />\n    </a>\n  </div>\n\n  <div class=\"flex-1\"></div>\n\n  <div class=\"flex-1 flex justify-end space-x-4\">\n    <avatar-dropdown></avatar-dropdown>\n  </div>\n</header>\n"
        },
        {
            "name": "NavButtonComponent",
            "id": "component-NavButtonComponent-966f9269b8eb55d20899b920eaf013d3fb4059c5e6bf2aaa5eb98ecdc795c2af66dd24570ab074d90ba6248464cf066b35b02ccd5495b91926e2885bb41d551c",
            "file": "src/app/@core/layout/sidebar/nav-button/nav-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sidebar-nav-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "href",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IconType",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isActive",
                    "defaultValue": "computed(() => this.router.url === this.href)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                },
                {
                    "name": "UITypographyDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, inject, computed } from '@angular/core';\nimport { IconType, NgIcon } from '@ng-icons/core';\nimport { UIIconDirective } from 'src/app/@core/ui/icon';\nimport { UITypographyDirective } from 'src/app/@core/ui/typography/ui-typography.directive';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'sidebar-nav-button',\n  standalone: true,\n  imports: [NgIcon, UIIconDirective, UITypographyDirective],\n  templateUrl: './nav-button.component.html',\n  styleUrl: './nav-button.component.css'\n})\nexport class NavButtonComponent {\n  @Input() icon?: IconType = '';\n  @Input() label: string = \"\";\n  @Input() href: string = \"\";\n\n  private router = inject(Router);\n\n  public isActive = computed(() => this.router.url === this.href);\n}",
            "styleUrl": "./nav-button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a\n  href=\"{{ href }}\"\n  class=\"group w-full flex flex-col items-center\"\n  [class.text-muted-foreground]=\"!isActive()\"\n>\n  <div\n    class=\"flex p-2 rounded-lg\"\n    [class.bg-primary]=\"isActive()\"\n    [class.text-primary-foreground]=\"isActive()\"\n    [class.group-hover:bg-muted]=\"!isActive()\"\n  >\n    <ng-icon ui name=\"{{ icon }}\" size=\"md\" />\n  </div>\n  <p typography class=\"mt-0! text-sm\">\n    {{ label }}\n  </p>\n</a>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-55c71d08a24b118b12ca10074db78060aecf6bdea802de8ab67e4808e65def26013bad32dd73f0adc3169c9064b33a6dee040b74c3b0cb3658fa981653c7131b",
            "file": "src/app/@core/layout/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({ lucideHouse, lucideSquareUser })"
                }
            ],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                },
                {
                    "name": "UIMenuItemDirective",
                    "type": "directive"
                },
                {
                    "name": "UIMenuGroupComponent",
                    "type": "component"
                },
                {
                    "name": "NavButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { UIMenuGroupComponent } from '../../ui/menu/components/ui-menu-group.component';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { UIMenuItemDirective } from '../../ui/menu/directives/ui-menu-item.directive';\nimport { UIIconDirective } from '../../ui/icon';\nimport { lucideHouse, lucideSquareUser } from '@ng-icons/lucide';\nimport { NavButtonComponent } from './nav-button/nav-button.component';\n\n@Component({\n  selector: 'app-sidebar',\n  imports: [NgIcon, UIIconDirective, UIMenuItemDirective, UIMenuGroupComponent, NavButtonComponent],\n  providers: [provideIcons({ lucideHouse, lucideSquareUser })],\n  templateUrl: './sidebar.component.html',\n  styleUrl: './sidebar.component.css',\n})\nexport class SidebarComponent {}\n",
            "styleUrl": "./sidebar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<aside class=\"bg-sidebar flex-1 h-full max-w-60 min-w-[72px] flex w-fit\">\n  <div class=\"flex flex-col py-4 justify-center w-full border-r border-border\">\n    <nav class=\"h-full\">\n      <sidebar-nav-button icon=\"lucideHouse\" label=\"Inicio\" href=\"/\"/>\n    </nav>\n    <nav>\n      <sidebar-nav-button icon=\"lucideCircleUser\" label=\"Perfil\" href=\"/profile\" />\n    </nav>\n  </div>\n</aside>\n"
        },
        {
            "name": "UIAvatarComponent",
            "id": "component-UIAvatarComponent-9eeb60777cbd2765e639154a28d051ad08ff7ad1402439b3640687da78376554e524876820c32b34335e5971590b4d408d41e950f9ff1ea4e743496945a90d6d",
            "file": "src/app/@core/ui/avatar/ui-avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-avatar",
            "styleUrls": [],
            "styles": [],
            "template": "@if (image()?.canShow()) {\n\t<ng-content select=\"[uiAvatarImage],[brnAvatarImage]\" />\n} @else {\n\t<ng-content select=\"[uiAvatarFallback],[brnAvatarFallback]\" />\n}\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(avatarVariants({ variant: this.variant() }), this.userClass()),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "variant",
                    "defaultValue": "input<AvatarVariants['variant']>('medium')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "image",
                    "defaultValue": "contentChild(BrnAvatarImageDirective)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BrnAvatarComponent"
                    }
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewEncapsulation, computed, input } from '@angular/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { BrnAvatarComponent } from './brn';\nimport { cn } from '@utils/cn';\n\nexport const avatarVariants = cva('relative flex shrink-0 overflow-hidden rounded-full', {\n\tvariants: {\n\t\tvariant: {\n\t\t\tsmall: 'h-6 w-6 text-xs',\n\t\t\tmedium: 'h-10 w-10',\n\t\t\tlarge: 'h-14 w-14 text-lg',\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: 'medium',\n\t},\n});\n\nexport type AvatarVariants = VariantProps<typeof avatarVariants>;\n\n@Component({\n\tselector: 'ui-avatar',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\ttemplate: `\n\t\t@if (image()?.canShow()) {\n\t\t\t<ng-content select=\"[uiAvatarImage],[brnAvatarImage]\" />\n\t\t} @else {\n\t\t\t<ng-content select=\"[uiAvatarFallback],[brnAvatarFallback]\" />\n\t\t}\n\t`,\n})\nexport class UIAvatarComponent extends BrnAvatarComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tpublic readonly variant = input<AvatarVariants['variant']>('medium');\n\n\tprotected readonly _computedClass = computed(() =>\n\t\tcn(avatarVariants({ variant: this.variant() }), this.userClass()),\n\t);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BrnAvatarComponent"
            ]
        },
        {
            "name": "UIMenuBarComponent",
            "id": "component-UIMenuBarComponent-3b2aeceec719168292c86aab1d2587f04c44a0a75a24fea90c5d60547b4014eddac08d884f2dc65637288561a09bc8fc9a2d4949220db65ea5430f43c4c312a1",
            "file": "src/app/@core/ui/menu/components/ui-menu-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content/>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuBarDirective"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn('border-border flex h-10 items-center space-x-1 rounded-md border bg-background p-1', this.userClass()),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuBarDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Component({\n\tselector: 'ui-menu-bar',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [BrnMenuBarDirective],\n\ttemplate: '<ng-content/>',\n})\nexport class UIMenuBarComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn('border-border flex h-10 items-center space-x-1 rounded-md border bg-background p-1', this.userClass()),\n\t);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuComponent",
            "id": "component-UIMenuComponent-162a439a215a48f55d47906470c43005fceb4083e18cac2d62fb8caab045a15d0d9f4483f21f17e929ba91c185d1346f7a13abf79b411afec2ea3514177eea47",
            "file": "src/app/@core/ui/menu/components/ui-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuDirective"
                }
            ],
            "inputsClass": [
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn(menuVariants({ variant: this._variant() }), this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "_variant",
                    "defaultValue": "signal<MenuVariants['variant']>('default')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, computed, input, signal } from '@angular/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\nexport const menuVariants = cva(\n\t'block border-border min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'my-0.5',\n\t\t\t\tmenubar: 'my-2',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t},\n\t},\n);\ntype MenuVariants = VariantProps<typeof menuVariants>;\n\n@Component({\n\tselector: 'ui-menu',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [BrnMenuDirective],\n\ttemplate: `\n\t\t<ng-content />\n\t`,\n})\nexport class UIMenuComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn(menuVariants({ variant: this._variant() }), this.userClass()));\n\n\tprivate readonly _variant = signal<MenuVariants['variant']>('default');\n\t@Input()\n\tpublic set variant(value: MenuVariants['variant']) {\n\t\tthis._variant.set(value);\n\t}\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "variant": {
                    "name": "variant",
                    "setSignature": {
                        "name": "variant",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "MenuVariants",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "MenuVariants",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "UIMenuGroupComponent",
            "id": "component-UIMenuGroupComponent-0ba181eedf5c702af7a4d918e81d76963594bcd1bc5cae976a1d5f8695f4a35f9de04683ffda2de502fdde40fff23f04000503545f903c257798c0be1f6a3bc3",
            "file": "src/app/@core/ui/menu/components/ui-menu-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu-group",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuGroupDirective"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BrnMenuGroupDirective } from '../brn';\n\n@Component({\n\tselector: 'ui-menu-group',\n\tstandalone: true,\n\thost: {\n\t\tclass: 'block',\n\t},\n\thostDirectives: [BrnMenuGroupDirective],\n\ttemplate: `\n\t\t<ng-content />\n\t`,\n})\nexport class UIMenuGroupComponent {}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuItemCheckComponent",
            "id": "component-UIMenuItemCheckComponent-182872dd229307941c3e517df67ba987fb52fed3cb6d00d5b6bb76be526f9c36d55f892a1b268f76b68c6a47c1d8c468590f34007e5fe92f23cd46ca13b08667",
            "file": "src/app/@core/ui/menu/components/ui-menu-item-check.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({ lucideCheck })"
                }
            ],
            "selector": "ui-menu-item-check",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-icon ui size=\"1rem\" name=\"lucideCheck\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n    cn(\n      'group-[.checked]:opacity-100 opacity-0 absolute left-2 flex h-3.5 w-3.5 items-center justify-center',\n      this.userClass()\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { lucideCheck } from '@ng-icons/lucide';\nimport type { ClassValue } from 'clsx';\nimport { UIIconDirective } from '../../icon';\nimport { cn } from '@utils/cn';\n\n@Component({\n  selector: 'ui-menu-item-check',\n  providers: [provideIcons({ lucideCheck })],\n  imports: [NgIcon, UIIconDirective],\n  template: ` <ng-icon ui size=\"1rem\" name=\"lucideCheck\" /> `,\n  host: {\n    '[class]': '_computedClass()',\n  },\n})\nexport class UIMenuItemCheckComponent {\n  public readonly userClass = input<ClassValue>('', { alias: 'class' });\n  protected _computedClass = computed(() =>\n    cn(\n      'group-[.checked]:opacity-100 opacity-0 absolute left-2 flex h-3.5 w-3.5 items-center justify-center',\n      this.userClass()\n    )\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuItemRadioComponent",
            "id": "component-UIMenuItemRadioComponent-19b07725265b79da15ebc42cef385e94f8bd70e4eb69bc067c5fae3be895707f5094de73295d1175adc5fc94a14204803ae7a91d59efeeb84b4434428a3e4ddf",
            "file": "src/app/@core/ui/menu/components/ui-menu-item-radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({ lucideCircle })"
                }
            ],
            "selector": "ui-menu-item-radio",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- Using 0.5rem for size to mimick h-2 w-2 -->\n<ng-icon ui size=\"0.5rem\" class=\"*:*:fill-current\" name=\"lucideCircle\" />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(\n\t\t\t'group-[.checked]:opacity-100 opacity-0 absolute left-2 flex h-3.5 w-3.5 items-center justify-center',\n\t\t\tthis.userClass(),\n\t\t),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { lucideCircle } from '@ng-icons/lucide';\nimport type { ClassValue } from 'clsx';\nimport { UIIconDirective } from '../../icon';\nimport { cn } from '@utils/cn';\n\n@Component({\n\tselector: 'ui-menu-item-radio',\n\tproviders: [provideIcons({ lucideCircle })],\n\timports: [NgIcon, UIIconDirective],\n\ttemplate: `\n\t\t<!-- Using 0.5rem for size to mimick h-2 w-2 -->\n\t\t<ng-icon ui size=\"0.5rem\" class=\"*:*:fill-current\" name=\"lucideCircle\" />\n\t`,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuItemRadioComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn(\n\t\t\t'group-[.checked]:opacity-100 opacity-0 absolute left-2 flex h-3.5 w-3.5 items-center justify-center',\n\t\t\tthis.userClass(),\n\t\t),\n\t);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuItemSubIndicatorComponent",
            "id": "component-UIMenuItemSubIndicatorComponent-33eecf1eea2f0d92c22edc104da4591aa57dee477637339e2d67c2e1893fa27d658d3343dc8a60904af25acd00ed9e0932f886bf7a3458cfe40f5c09a983b8be",
            "file": "src/app/@core/ui/menu/components/ui-menu-item-sub-indicator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({ lucideChevronRight })"
                }
            ],
            "selector": "ui-menu-item-sub-indicator",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-icon ui size=\"none\" class=\"h-full w-full\" name=\"lucideChevronRight\" />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn('inline-block ml-auto h-4 w-4', this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "UIIconDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { NgIcon, provideIcons } from '@ng-icons/core';\nimport { lucideChevronRight } from '@ng-icons/lucide';\nimport type { ClassValue } from 'clsx';\nimport { UIIconDirective } from '../../icon';\nimport { cn } from '@utils/cn';\n\n@Component({\n\tselector: 'ui-menu-item-sub-indicator',\n\tproviders: [provideIcons({ lucideChevronRight })],\n\timports: [NgIcon, UIIconDirective],\n\ttemplate: `\n\t\t<ng-icon ui size=\"none\" class=\"h-full w-full\" name=\"lucideChevronRight\" />\n\t`,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuItemSubIndicatorComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn('inline-block ml-auto h-4 w-4', this.userClass()));\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuLabelComponent",
            "id": "component-UIMenuLabelComponent-b0855d09b9ac4b9c2771a612b56727704fe1a956f8c47728f0cb39b6b716d51b2271df458577e276b0340d920d032e49da2fe8e66a0aed00dfbb3aea8694fab0",
            "file": "src/app/@core/ui/menu/components/ui-menu-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu-label",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": false,
                    "name": "inset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn('block px-2 py-1.5 text-sm font-semibold', this._inset() && 'pl-8', this.userClass()),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "_inset",
                    "defaultValue": "signal<ClassValue>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, computed, input, signal } from '@angular/core';\nimport { cn } from '@utils/cn';\nimport type { ClassValue } from 'clsx';\n\n@Component({\n\tselector: 'ui-menu-label',\n\tstandalone: true,\n\ttemplate: `\n\t\t<ng-content />\n\t`,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuLabelComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn('block px-2 py-1.5 text-sm font-semibold', this._inset() && 'pl-8', this.userClass()),\n\t);\n\n\tprivate readonly _inset = signal<ClassValue>(false);\n\t@Input({ transform: booleanAttribute })\n\tpublic set inset(value: boolean) {\n\t\tthis._inset.set(value);\n\t}\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "inset": {
                    "name": "inset",
                    "setSignature": {
                        "name": "inset",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "UIMenuSeparatorComponent",
            "id": "component-UIMenuSeparatorComponent-853cff0ea66bfc15b5443e0432c2e3b7c2ac880c881dfaf39b0d53b0ab9f40e2c52a677bef401316d6136e5892f5d4800d52728c07ee4460be3bd1b106130f29",
            "file": "src/app/@core/ui/menu/components/ui-menu-separator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu-separator",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() => cn('block -mx-1 my-1 h-px bg-muted', this.userClass()))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { cn } from '@utils/cn';\nimport type { ClassValue } from 'clsx';\n\n@Component({\n\tselector: 'ui-menu-separator',\n\tstandalone: true,\n\ttemplate: '',\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuSeparatorComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() => cn('block -mx-1 my-1 h-px bg-muted', this.userClass()));\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UIMenuShortcutComponent",
            "id": "component-UIMenuShortcutComponent-0de720f3e079c332f4f247fff296b810ee362a4c9e4d7e21a124639fe92f3c7ddb05d7f70a907525d3cc6deed2f67eefab6ab37f655746d69dae36b524264531",
            "file": "src/app/@core/ui/menu/components/ui-menu-shortcut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-menu-shortcut",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn('ml-auto font-light text-xs tracking-widest opacity-60', this.userClass()),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport { cn } from '@utils/cn';\nimport type { ClassValue } from 'clsx';\n\n@Component({\n\tselector: 'ui-menu-shortcut',\n\tstandalone: true,\n\ttemplate: `\n\t\t<ng-content />\n\t`,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class UIMenuShortcutComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn('ml-auto font-light text-xs tracking-widest opacity-60', this.userClass()),\n\t);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UISubMenuComponent",
            "id": "component-UISubMenuComponent-dbe901cf3991351ae0a1db4ef7c18e24c0a5777c1e5ff038f5be0b46c1ccd6b0a02004a43c73e718055f96e60caa2c44157eb78531f16e549d8c56ec8a320b70",
            "file": "src/app/@core/ui/menu/components/ui-sub-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-sub-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content />\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "BrnMenuDirective"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_computedClass",
                    "defaultValue": "computed(() =>\n\t\tcn(\n\t\t\t'border-border min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tthis.userClass(),\n\t\t),\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "userClass",
                    "defaultValue": "input<ClassValue>('', { alias: 'class' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\nimport type { ClassValue } from 'clsx';\nimport { BrnMenuDirective } from '../brn';\nimport { cn } from '@utils/cn';\n\n@Component({\n\tselector: 'ui-sub-menu',\n\tstandalone: true,\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n\thostDirectives: [BrnMenuDirective],\n\ttemplate: `\n\t\t<ng-content />\n\t`,\n})\nexport class UISubMenuComponent {\n\tpublic readonly userClass = input<ClassValue>('', { alias: 'class' });\n\tprotected _computedClass = computed(() =>\n\t\tcn(\n\t\t\t'border-border min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tthis.userClass(),\n\t\t),\n\t);\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "BrnAvatarModule",
            "id": "module-BrnAvatarModule-0eeb3c3aab7a50b28e8170a68b82937b60b998d6bd1b9b684453a786e9583e80377b62dd8e51ca53e99887e41d1d0d1cb40f2599cd9c8cc9d9736914a987a047",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/avatar/brn/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrnAvatarFallbackDirective } from './fallback/index';\nimport { BrnAvatarImageDirective } from './image/index';\nimport { BrnAvatarComponent } from './brn-avatar.component';\n\n\n\nexport * from './brn-avatar.component';\nexport * from './fallback';\nexport * from './image';\nexport * from './utils';\n\nexport const BrnAvatarImports = [BrnAvatarComponent, BrnAvatarFallbackDirective, BrnAvatarImageDirective] as const;\n\n@NgModule({\n\timports: [...BrnAvatarImports],\n\texports: [...BrnAvatarImports],\n})\nexport class BrnAvatarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BrnContextMenuModule",
            "id": "module-BrnContextMenuModule-70471ae5355e5392e3187684fedfeb3aecf8225a1b401c31b96a9950d502dba2796a0382e8c7c08803ed0d12473c59c3da54789522613039eba1a030003b9269",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/brn/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { BrnContextMenuTriggerDirective } from './brn-context-menu-trigger.directive';\nimport { BrnMenuBarDirective } from './brn-menu-bar.directive';\nimport { BrnMenuGroupDirective } from './brn-menu-group.directive';\nimport { BrnMenuItemCheckboxDirective } from './brn-menu-item-checkbox.directive';\nimport { BrnMenuItemRadioDirective } from './brn-menu-item-radio.directive';\nimport { BrnMenuItemDirective } from './brn-menu-item.directive';\nimport { BrnMenuTriggerDirective } from './brn-menu-trigger.directive';\nimport { BrnMenuDirective } from './brn-menu.directive';\n\nexport * from './brn-context-menu-trigger.directive';\nexport * from './brn-menu-bar.directive';\nexport * from './brn-menu-group.directive';\nexport * from './brn-menu-item-checkbox.directive';\nexport * from './brn-menu-item-radio.directive';\nexport * from './brn-menu-item.directive';\nexport * from './brn-menu-trigger.directive';\nexport * from './brn-menu.directive';\n\nexport const BrnMenuItemImports = [\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const;\nexport const BrnMenuImports = [\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const;\nexport const BrnMenuBarImports = [\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const;\nexport const BrnContextMenuImports = [\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const;\n\n@NgModule({\n  imports: [...BrnMenuItemImports],\n  exports: [...BrnMenuItemImports],\n})\nexport class BrnMenuItemModule {}\n\n@NgModule({\n  imports: [...BrnMenuImports],\n  exports: [...BrnMenuImports],\n})\nexport class BrnMenuModule {}\n\n@NgModule({\n  imports: [...BrnMenuBarImports],\n  exports: [...BrnMenuBarImports],\n})\nexport class BrnMenuBarModule {}\n\n@NgModule({\n  imports: [...BrnContextMenuImports],\n  exports: [...BrnContextMenuImports],\n})\nexport class BrnContextMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BrnMenuBarModule",
            "id": "module-BrnMenuBarModule-70471ae5355e5392e3187684fedfeb3aecf8225a1b401c31b96a9950d502dba2796a0382e8c7c08803ed0d12473c59c3da54789522613039eba1a030003b9269",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/brn/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { BrnContextMenuTriggerDirective } from './brn-context-menu-trigger.directive';\nimport { BrnMenuBarDirective } from './brn-menu-bar.directive';\nimport { BrnMenuGroupDirective } from './brn-menu-group.directive';\nimport { BrnMenuItemCheckboxDirective } from './brn-menu-item-checkbox.directive';\nimport { BrnMenuItemRadioDirective } from './brn-menu-item-radio.directive';\nimport { BrnMenuItemDirective } from './brn-menu-item.directive';\nimport { BrnMenuTriggerDirective } from './brn-menu-trigger.directive';\nimport { BrnMenuDirective } from './brn-menu.directive';\n\nexport * from './brn-context-menu-trigger.directive';\nexport * from './brn-menu-bar.directive';\nexport * from './brn-menu-group.directive';\nexport * from './brn-menu-item-checkbox.directive';\nexport * from './brn-menu-item-radio.directive';\nexport * from './brn-menu-item.directive';\nexport * from './brn-menu-trigger.directive';\nexport * from './brn-menu.directive';\n\nexport const BrnMenuItemImports = [\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const;\nexport const BrnMenuImports = [\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const;\nexport const BrnMenuBarImports = [\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const;\nexport const BrnContextMenuImports = [\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const;\n\n@NgModule({\n  imports: [...BrnMenuItemImports],\n  exports: [...BrnMenuItemImports],\n})\nexport class BrnMenuItemModule {}\n\n@NgModule({\n  imports: [...BrnMenuImports],\n  exports: [...BrnMenuImports],\n})\nexport class BrnMenuModule {}\n\n@NgModule({\n  imports: [...BrnMenuBarImports],\n  exports: [...BrnMenuBarImports],\n})\nexport class BrnMenuBarModule {}\n\n@NgModule({\n  imports: [...BrnContextMenuImports],\n  exports: [...BrnContextMenuImports],\n})\nexport class BrnContextMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BrnMenuItemModule",
            "id": "module-BrnMenuItemModule-70471ae5355e5392e3187684fedfeb3aecf8225a1b401c31b96a9950d502dba2796a0382e8c7c08803ed0d12473c59c3da54789522613039eba1a030003b9269",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/brn/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { BrnContextMenuTriggerDirective } from './brn-context-menu-trigger.directive';\nimport { BrnMenuBarDirective } from './brn-menu-bar.directive';\nimport { BrnMenuGroupDirective } from './brn-menu-group.directive';\nimport { BrnMenuItemCheckboxDirective } from './brn-menu-item-checkbox.directive';\nimport { BrnMenuItemRadioDirective } from './brn-menu-item-radio.directive';\nimport { BrnMenuItemDirective } from './brn-menu-item.directive';\nimport { BrnMenuTriggerDirective } from './brn-menu-trigger.directive';\nimport { BrnMenuDirective } from './brn-menu.directive';\n\nexport * from './brn-context-menu-trigger.directive';\nexport * from './brn-menu-bar.directive';\nexport * from './brn-menu-group.directive';\nexport * from './brn-menu-item-checkbox.directive';\nexport * from './brn-menu-item-radio.directive';\nexport * from './brn-menu-item.directive';\nexport * from './brn-menu-trigger.directive';\nexport * from './brn-menu.directive';\n\nexport const BrnMenuItemImports = [\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const;\nexport const BrnMenuImports = [\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const;\nexport const BrnMenuBarImports = [\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const;\nexport const BrnContextMenuImports = [\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const;\n\n@NgModule({\n  imports: [...BrnMenuItemImports],\n  exports: [...BrnMenuItemImports],\n})\nexport class BrnMenuItemModule {}\n\n@NgModule({\n  imports: [...BrnMenuImports],\n  exports: [...BrnMenuImports],\n})\nexport class BrnMenuModule {}\n\n@NgModule({\n  imports: [...BrnMenuBarImports],\n  exports: [...BrnMenuBarImports],\n})\nexport class BrnMenuBarModule {}\n\n@NgModule({\n  imports: [...BrnContextMenuImports],\n  exports: [...BrnContextMenuImports],\n})\nexport class BrnContextMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BrnMenuModule",
            "id": "module-BrnMenuModule-70471ae5355e5392e3187684fedfeb3aecf8225a1b401c31b96a9950d502dba2796a0382e8c7c08803ed0d12473c59c3da54789522613039eba1a030003b9269",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/brn/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { BrnContextMenuTriggerDirective } from './brn-context-menu-trigger.directive';\nimport { BrnMenuBarDirective } from './brn-menu-bar.directive';\nimport { BrnMenuGroupDirective } from './brn-menu-group.directive';\nimport { BrnMenuItemCheckboxDirective } from './brn-menu-item-checkbox.directive';\nimport { BrnMenuItemRadioDirective } from './brn-menu-item-radio.directive';\nimport { BrnMenuItemDirective } from './brn-menu-item.directive';\nimport { BrnMenuTriggerDirective } from './brn-menu-trigger.directive';\nimport { BrnMenuDirective } from './brn-menu.directive';\n\nexport * from './brn-context-menu-trigger.directive';\nexport * from './brn-menu-bar.directive';\nexport * from './brn-menu-group.directive';\nexport * from './brn-menu-item-checkbox.directive';\nexport * from './brn-menu-item-radio.directive';\nexport * from './brn-menu-item.directive';\nexport * from './brn-menu-trigger.directive';\nexport * from './brn-menu.directive';\n\nexport const BrnMenuItemImports = [\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const;\nexport const BrnMenuImports = [\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const;\nexport const BrnMenuBarImports = [\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const;\nexport const BrnContextMenuImports = [\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const;\n\n@NgModule({\n  imports: [...BrnMenuItemImports],\n  exports: [...BrnMenuItemImports],\n})\nexport class BrnMenuItemModule {}\n\n@NgModule({\n  imports: [...BrnMenuImports],\n  exports: [...BrnMenuImports],\n})\nexport class BrnMenuModule {}\n\n@NgModule({\n  imports: [...BrnMenuBarImports],\n  exports: [...BrnMenuBarImports],\n})\nexport class BrnMenuBarModule {}\n\n@NgModule({\n  imports: [...BrnContextMenuImports],\n  exports: [...BrnContextMenuImports],\n})\nexport class BrnContextMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HlmButtonModule",
            "id": "module-HlmButtonModule-2f642e9983f0faeb05995d6ad6d4cf5a64f906f86e6e900621ab55ef820c0f51ae1dd915300f3c42cbb5a88faf3cbe7ed3e32694f0ce5e0caa18ddea56a95f57",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/button/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { UIButtonDirective } from './ui-button.directive';\nexport * from './ui-button.token';\n\nexport * from './ui-button.directive';\n\n@NgModule({\n\timports: [UIButtonDirective],\n\texports: [UIButtonDirective],\n})\n\nexport class HlmButtonModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UIButtonDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UIButtonDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HlmIconModule",
            "id": "module-HlmIconModule-914f0ac1902d30a92d04861cf595c2705b69140df856818642cd1161fc0da4368429f80130997ebce1d1e8f744b20f6830d3fa75d1ef9b7b44ff0255f8694a28",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/icon/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { UIIconDirective } from './ui-icon.directive';\n\nexport * from './ui-icon.directive';\nexport * from './ui-icon.token';\n\n@NgModule({\n\timports: [UIIconDirective],\n\texports: [UIIconDirective],\n})\nexport class HlmIconModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UIIconDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UIIconDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIAspectRatioModule",
            "id": "module-UIAspectRatioModule-f6f86e5761d30e89881cef53f0fccc24e944a2e95c1b0edde585ba62f5b56f7d5a6f858ff6840296ae90db400b8e094c635bbf60d8dd1f6c6e038d307dfe1620",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/aspect-ratio/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { UIAspectRatioDirective } from './ui-aspect-ratio.directive';\n\nexport * from './ui-aspect-ratio.directive';\n\n@NgModule({\n\timports: [UIAspectRatioDirective],\n\texports: [UIAspectRatioDirective],\n})\nexport class UIAspectRatioModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UIAspectRatioDirective"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UIAspectRatioDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIAvatarModule",
            "id": "module-UIAvatarModule-c890d708593f2fe967fc5b54a56c66aa27dd1e01ee944c3a2bcc25a8ea598d4035705443a8494595503acebccd19191d29b4cb0fa52cef1c40d438009cb86f01",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/avatar/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { UIAvatarFallbackDirective } from './fallback';\nimport { UIAvatarComponent } from './ui-avatar.component';\nimport { UIAvatarImageDirective } from './image';\n\nexport * from './fallback';\nexport * from './ui-avatar.component';\nexport * from './image';\n\nexport const UIAvatarImports = [UIAvatarFallbackDirective, UIAvatarImageDirective, UIAvatarComponent] as const;\n\n@NgModule({\n\timports: [...UIAvatarImports],\n\texports: [...UIAvatarImports],\n})\nexport class UIAvatarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIMenuBarModule",
            "id": "module-UIMenuBarModule-a4c342f8b280c43c5ae84f8ac5df274bd37f7e8bac34f7059d56c1c8a3ca1d67176a123d50d696dd4ed19c1af852a963aff8f6943420a2ad5608ecc3e88a9ccf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { UIMenuBarComponent } from \"./components/ui-menu-bar.component\";\nimport { UIMenuGroupComponent } from \"./components/ui-menu-group.component\";\nimport { UIMenuItemCheckComponent } from \"./components/ui-menu-item-check.component\";\nimport { UIMenuItemRadioComponent } from \"./components/ui-menu-item-radio.component\";\nimport { UIMenuItemSubIndicatorComponent } from \"./components/ui-menu-item-sub-indicator.component\";\nimport { UIMenuLabelComponent } from \"./components/ui-menu-label.component\";\nimport { UIMenuSeparatorComponent } from \"./components/ui-menu-separator.component\";\nimport { UIMenuShortcutComponent } from \"./components/ui-menu-shortcut.component\";\nimport { UIMenuComponent } from \"./components/ui-menu.component\";\nimport { UISubMenuComponent } from \"./components/ui-sub-menu.component\";\nimport { UIMenuBarItemDirective } from \"./directives/ui-menu-bar-item.directive\";\nimport { UIMenuItemCheckboxDirective } from \"./directives/ui-menu-item-checkbox.directive\";\nimport { UIMenuItemIconDirective } from \"./directives/ui-menu-item-icon.directive\";\nimport { UIMenuItemRadioDirective } from \"./directives/ui-menu-item-radio.directive\";\nimport { UIMenuItemDirective } from \"./directives/ui-menu-item.directive\";\n\nexport const UIMenuItemImports = [\n\tUIMenuItemDirective,\n\tUIMenuItemIconDirective,\n\tUIMenuGroupComponent,\n\tUIMenuItemSubIndicatorComponent,\n\tUIMenuItemRadioComponent,\n\tUIMenuItemCheckComponent,\n\tUIMenuShortcutComponent,\n\tUIMenuItemCheckboxDirective,\n\tUIMenuItemRadioDirective,\n];\nexport const UIMenuStructureImports = [UIMenuLabelComponent, UIMenuSeparatorComponent] as const;\nexport const UIMenuImports = [\n\t...UIMenuItemImports,\n\t...UIMenuStructureImports,\n\tUIMenuComponent,\n\tUISubMenuComponent,\n] as const;\nexport const UIMenuBarImports = [...UIMenuImports, UIMenuBarComponent, UIMenuBarItemDirective] as const;\n\n@NgModule({\n\timports: [...UIMenuItemImports],\n\texports: [...UIMenuItemImports],\n})\nexport class UIMenuItemModule {}\n\n@NgModule({\n\timports: [...UIMenuImports],\n\texports: [...UIMenuImports],\n})\nexport class UIMenuModule {}\n\n@NgModule({\n\timports: [...UIMenuBarImports],\n\texports: [...UIMenuBarImports],\n})\nexport class UIMenuBarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIMenuItemModule",
            "id": "module-UIMenuItemModule-a4c342f8b280c43c5ae84f8ac5df274bd37f7e8bac34f7059d56c1c8a3ca1d67176a123d50d696dd4ed19c1af852a963aff8f6943420a2ad5608ecc3e88a9ccf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { UIMenuBarComponent } from \"./components/ui-menu-bar.component\";\nimport { UIMenuGroupComponent } from \"./components/ui-menu-group.component\";\nimport { UIMenuItemCheckComponent } from \"./components/ui-menu-item-check.component\";\nimport { UIMenuItemRadioComponent } from \"./components/ui-menu-item-radio.component\";\nimport { UIMenuItemSubIndicatorComponent } from \"./components/ui-menu-item-sub-indicator.component\";\nimport { UIMenuLabelComponent } from \"./components/ui-menu-label.component\";\nimport { UIMenuSeparatorComponent } from \"./components/ui-menu-separator.component\";\nimport { UIMenuShortcutComponent } from \"./components/ui-menu-shortcut.component\";\nimport { UIMenuComponent } from \"./components/ui-menu.component\";\nimport { UISubMenuComponent } from \"./components/ui-sub-menu.component\";\nimport { UIMenuBarItemDirective } from \"./directives/ui-menu-bar-item.directive\";\nimport { UIMenuItemCheckboxDirective } from \"./directives/ui-menu-item-checkbox.directive\";\nimport { UIMenuItemIconDirective } from \"./directives/ui-menu-item-icon.directive\";\nimport { UIMenuItemRadioDirective } from \"./directives/ui-menu-item-radio.directive\";\nimport { UIMenuItemDirective } from \"./directives/ui-menu-item.directive\";\n\nexport const UIMenuItemImports = [\n\tUIMenuItemDirective,\n\tUIMenuItemIconDirective,\n\tUIMenuGroupComponent,\n\tUIMenuItemSubIndicatorComponent,\n\tUIMenuItemRadioComponent,\n\tUIMenuItemCheckComponent,\n\tUIMenuShortcutComponent,\n\tUIMenuItemCheckboxDirective,\n\tUIMenuItemRadioDirective,\n];\nexport const UIMenuStructureImports = [UIMenuLabelComponent, UIMenuSeparatorComponent] as const;\nexport const UIMenuImports = [\n\t...UIMenuItemImports,\n\t...UIMenuStructureImports,\n\tUIMenuComponent,\n\tUISubMenuComponent,\n] as const;\nexport const UIMenuBarImports = [...UIMenuImports, UIMenuBarComponent, UIMenuBarItemDirective] as const;\n\n@NgModule({\n\timports: [...UIMenuItemImports],\n\texports: [...UIMenuItemImports],\n})\nexport class UIMenuItemModule {}\n\n@NgModule({\n\timports: [...UIMenuImports],\n\texports: [...UIMenuImports],\n})\nexport class UIMenuModule {}\n\n@NgModule({\n\timports: [...UIMenuBarImports],\n\texports: [...UIMenuBarImports],\n})\nexport class UIMenuBarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UIMenuGroupComponent"
                        },
                        {
                            "name": "UIMenuItemCheckComponent"
                        },
                        {
                            "name": "UIMenuItemCheckboxDirective"
                        },
                        {
                            "name": "UIMenuItemDirective"
                        },
                        {
                            "name": "UIMenuItemIconDirective"
                        },
                        {
                            "name": "UIMenuItemRadioComponent"
                        },
                        {
                            "name": "UIMenuItemRadioDirective"
                        },
                        {
                            "name": "UIMenuItemSubIndicatorComponent"
                        },
                        {
                            "name": "UIMenuShortcutComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UIMenuGroupComponent"
                        },
                        {
                            "name": "UIMenuItemCheckComponent"
                        },
                        {
                            "name": "UIMenuItemCheckboxDirective"
                        },
                        {
                            "name": "UIMenuItemDirective"
                        },
                        {
                            "name": "UIMenuItemIconDirective"
                        },
                        {
                            "name": "UIMenuItemRadioComponent"
                        },
                        {
                            "name": "UIMenuItemRadioDirective"
                        },
                        {
                            "name": "UIMenuItemSubIndicatorComponent"
                        },
                        {
                            "name": "UIMenuShortcutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UIMenuModule",
            "id": "module-UIMenuModule-a4c342f8b280c43c5ae84f8ac5df274bd37f7e8bac34f7059d56c1c8a3ca1d67176a123d50d696dd4ed19c1af852a963aff8f6943420a2ad5608ecc3e88a9ccf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@core/ui/menu/index.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { UIMenuBarComponent } from \"./components/ui-menu-bar.component\";\nimport { UIMenuGroupComponent } from \"./components/ui-menu-group.component\";\nimport { UIMenuItemCheckComponent } from \"./components/ui-menu-item-check.component\";\nimport { UIMenuItemRadioComponent } from \"./components/ui-menu-item-radio.component\";\nimport { UIMenuItemSubIndicatorComponent } from \"./components/ui-menu-item-sub-indicator.component\";\nimport { UIMenuLabelComponent } from \"./components/ui-menu-label.component\";\nimport { UIMenuSeparatorComponent } from \"./components/ui-menu-separator.component\";\nimport { UIMenuShortcutComponent } from \"./components/ui-menu-shortcut.component\";\nimport { UIMenuComponent } from \"./components/ui-menu.component\";\nimport { UISubMenuComponent } from \"./components/ui-sub-menu.component\";\nimport { UIMenuBarItemDirective } from \"./directives/ui-menu-bar-item.directive\";\nimport { UIMenuItemCheckboxDirective } from \"./directives/ui-menu-item-checkbox.directive\";\nimport { UIMenuItemIconDirective } from \"./directives/ui-menu-item-icon.directive\";\nimport { UIMenuItemRadioDirective } from \"./directives/ui-menu-item-radio.directive\";\nimport { UIMenuItemDirective } from \"./directives/ui-menu-item.directive\";\n\nexport const UIMenuItemImports = [\n\tUIMenuItemDirective,\n\tUIMenuItemIconDirective,\n\tUIMenuGroupComponent,\n\tUIMenuItemSubIndicatorComponent,\n\tUIMenuItemRadioComponent,\n\tUIMenuItemCheckComponent,\n\tUIMenuShortcutComponent,\n\tUIMenuItemCheckboxDirective,\n\tUIMenuItemRadioDirective,\n];\nexport const UIMenuStructureImports = [UIMenuLabelComponent, UIMenuSeparatorComponent] as const;\nexport const UIMenuImports = [\n\t...UIMenuItemImports,\n\t...UIMenuStructureImports,\n\tUIMenuComponent,\n\tUISubMenuComponent,\n] as const;\nexport const UIMenuBarImports = [...UIMenuImports, UIMenuBarComponent, UIMenuBarItemDirective] as const;\n\n@NgModule({\n\timports: [...UIMenuItemImports],\n\texports: [...UIMenuItemImports],\n})\nexport class UIMenuItemModule {}\n\n@NgModule({\n\timports: [...UIMenuImports],\n\texports: [...UIMenuImports],\n})\nexport class UIMenuModule {}\n\n@NgModule({\n\timports: [...UIMenuBarImports],\n\texports: [...UIMenuBarImports],\n})\nexport class UIMenuBarModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new AngularNodeAppEngine()"
            },
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n    provideIcons({\n      lucideHouse,\n      lucideCircleUser\n    }),\n  ],\n}"
            },
            {
                "name": "avatarVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "cva('relative flex shrink-0 overflow-hidden rounded-full', {\n\tvariants: {\n\t\tvariant: {\n\t\t\tsmall: 'h-6 w-6 text-xs',\n\t\t\tmedium: 'h-10 w-10',\n\t\t\tlarge: 'h-14 w-14 text-lg',\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: 'medium',\n\t},\n})"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "BrnAvatarImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[BrnAvatarComponent, BrnAvatarFallbackDirective, BrnAvatarImageDirective] as const"
            },
            {
                "name": "BrnButtonConfigToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/button/ui-button.token.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<BrnButtonConfig>('BrnButtonConfig')"
            },
            {
                "name": "BrnContextMenuImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/brn/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const"
            },
            {
                "name": "BrnMenuBarImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/brn/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const"
            },
            {
                "name": "BrnMenuImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/brn/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const"
            },
            {
                "name": "BrnMenuItemImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/brn/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "resolve(serverDistFolder, '../browser')"
            },
            {
                "name": "buttonVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)"
            },
            {
                "name": "cleanup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(hex: string) => {\n\tconst noHash = hex.replace('#', '').trim().toLowerCase();\n\n\tif (!isShortHand(noHash)) return noHash;\n\n\treturn noHash\n\t\t.split('')\n\t\t.map((char) => char + char)\n\t\t.join('');\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "defaultConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/button/ui-button.token.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BrnButtonConfig",
                "defaultValue": "{\n\tvariant: 'default',\n\tsize: 'default',\n}"
            },
            {
                "name": "defaultConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UIIconConfig",
                "defaultValue": "{\n\tsize: 'base',\n}"
            },
            {
                "name": "firstAndLast",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(initials: string[]) => `${initials[0]}${initials[initials.length - 1]}`"
            },
            {
                "name": "getBrnMenuAlign",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(align: Exclude<BrnMenuAlign, undefined>): ConnectedPosition[] => [\n\t{\n\t\toriginX: align,\n\t\toriginY: 'bottom',\n\t\toverlayX: align,\n\t\toverlayY: 'top',\n\t},\n\t{\n\t\toriginX: align,\n\t\toriginY: 'top',\n\t\toverlayX: align,\n\t\toverlayY: 'bottom',\n\t},\n]"
            },
            {
                "name": "hlmMenuItemVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "cva(\n\t'group w-full relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: { inset: { true: 'pl-8', false: '' } },\n\t\tdefaultVariants: { inset: false },\n\t},\n)"
            },
            {
                "name": "isBright",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(hex: string) => Number.parseInt(cleanup(hex), 16) > 0xffffff / 1.25"
            },
            {
                "name": "isShortHand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(hex: string) => hex.length === 3"
            },
            {
                "name": "menuVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "cva(\n\t'block border-border min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'my-0.5',\n\t\t\t\tmenubar: 'my-2',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t},\n\t},\n)"
            },
            {
                "name": "parseDividedString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(value: NumberInput): NumberInput => {\n\tif (typeof value !== 'string' || !value.includes('/')) return value;\n\treturn value\n\t\t.split('/')\n\t\t.map((v) => Number.parseInt(v, 10))\n\t\t.reduce((a, b) => a / b);\n}"
            },
            {
                "name": "reqHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createNodeRequestHandler(app)",
                "rawdescription": "The request handler used by the Angular CLI (dev-server and during build).",
                "description": "<p>The request handler used by the Angular CLI (dev-server and during build).</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}"
            },
            {
                "name": "serverDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "dirname(fileURLToPath(import.meta.url))"
            },
            {
                "name": "serverRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ServerRoute[]",
                "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]"
            },
            {
                "name": "toInitial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(capitalize = true) =>\n\t(word: string) => {\n\t\tconst initial = word.charAt(0);\n\t\treturn capitalize ? initial.toLocaleUpperCase() : initial;\n\t}"
            },
            {
                "name": "typographyVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/typography/ui-typography.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "cva('', {\n  variants: {\n    variant: {\n      h1: 'scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl',\n      h2: 'scroll-m-20 border-border border-b pb-2 text-3xl font-semibold tracking-tight transition-colors first:mt-0',\n      h3: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      h4: 'scroll-m-20 text-xl font-semibold tracking-tight',\n      large: 'text-lg font-semibold',\n      lead: 'text-xl text-muted-foreground',\n      muted: 'text-sm text-muted-foreground',\n      p: 'leading-7 [&:not(:first-child)]:mt-6',\n      small: 'text-sm font-medium leading-none',\n      blockquote: 'mt-6 border-border border-l-2 pl-6 italic',\n      code: 'relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold',\n      ul: 'my-6 ml-6 list-disc [&>li]:mt-2',\n    },\n  },\n  defaultVariants: {\n    variant: 'p',\n  },\n})"
            },
            {
                "name": "UIAvatarImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/avatar/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[UIAvatarFallbackDirective, UIAvatarImageDirective, UIAvatarComponent] as const"
            },
            {
                "name": "UIIconConfigToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<UIIconConfig>('UIIconConfig')"
            },
            {
                "name": "UIMenuBarImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[...UIMenuImports, UIMenuBarComponent, UIMenuBarItemDirective] as const"
            },
            {
                "name": "UIMenuImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n\t...UIMenuItemImports,\n\t...UIMenuStructureImports,\n\tUIMenuComponent,\n\tUISubMenuComponent,\n] as const"
            },
            {
                "name": "UIMenuItemImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\tUIMenuItemDirective,\n\tUIMenuItemIconDirective,\n\tUIMenuGroupComponent,\n\tUIMenuItemSubIndicatorComponent,\n\tUIMenuItemRadioComponent,\n\tUIMenuItemCheckComponent,\n\tUIMenuShortcutComponent,\n\tUIMenuItemCheckboxDirective,\n\tUIMenuItemRadioDirective,\n]"
            },
            {
                "name": "UIMenuStructureImports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@core/ui/menu/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[UIMenuLabelComponent, UIMenuSeparatorComponent] as const"
            }
        ],
        "functions": [
            {
                "name": "cn",
                "file": "src/app/shared/utils/cn.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "inputs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "inputs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hashManyTimes",
                "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "times",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "times",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hashString",
                "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "hexColorFor",
                "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "injectBrnButtonConfig",
                "file": "src/app/@core/ui/button/ui-button.token.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "BrnButtonConfig"
            },
            {
                "name": "injectUIIconConfig",
                "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "UIIconConfig"
            },
            {
                "name": "provideBrnButtonConfig",
                "file": "src/app/@core/ui/button/ui-button.token.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "config",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValueProvider",
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideUIIconConfig",
                "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "config",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValueProvider",
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AvatarVariants",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "VariantProps<>",
                "file": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "BrnMenuAlign",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"start\" | \"center\" | \"end\" | undefined",
                "file": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ButtonVariants",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "VariantProps<>",
                "file": "src/app/@core/ui/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "HlmMenuItemVariants",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "VariantProps<>",
                "file": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "IconSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"base\" | \"lg\" | \"xl\" | \"none\" | ",
                "file": "src/app/@core/ui/icon/ui-icon.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "MenuVariants",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "VariantProps<>",
                "file": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TypographyVariants",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "VariantProps<>",
                "file": "src/app/@core/ui/typography/ui-typography.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "angularApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new AngularNodeAppEngine()"
                },
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "resolve(serverDistFolder, '../browser')"
                },
                {
                    "name": "reqHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createNodeRequestHandler(app)",
                    "rawdescription": "The request handler used by the Angular CLI (dev-server and during build).",
                    "description": "<p>The request handler used by the Angular CLI (dev-server and during build).</p>\n"
                },
                {
                    "name": "serverDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "dirname(fileURLToPath(import.meta.url))"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n    provideIcons({\n      lucideHouse,\n      lucideCircleUser\n    }),\n  ],\n}"
                }
            ],
            "src/app/@core/ui/avatar/ui-avatar.component.ts": [
                {
                    "name": "avatarVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "cva('relative flex shrink-0 overflow-hidden rounded-full', {\n\tvariants: {\n\t\tvariant: {\n\t\t\tsmall: 'h-6 w-6 text-xs',\n\t\t\tmedium: 'h-10 w-10',\n\t\t\tlarge: 'h-14 w-14 text-lg',\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: 'medium',\n\t},\n})"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/@core/ui/avatar/brn/index.ts": [
                {
                    "name": "BrnAvatarImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[BrnAvatarComponent, BrnAvatarFallbackDirective, BrnAvatarImageDirective] as const"
                }
            ],
            "src/app/@core/ui/button/ui-button.token.ts": [
                {
                    "name": "BrnButtonConfigToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/button/ui-button.token.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<BrnButtonConfig>('BrnButtonConfig')"
                },
                {
                    "name": "defaultConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/button/ui-button.token.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BrnButtonConfig",
                    "defaultValue": "{\n\tvariant: 'default',\n\tsize: 'default',\n}"
                }
            ],
            "src/app/@core/ui/menu/brn/index.ts": [
                {
                    "name": "BrnContextMenuImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/brn/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  ...BrnMenuImports,\n  BrnContextMenuTriggerDirective,\n] as const"
                },
                {
                    "name": "BrnMenuBarImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/brn/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  ...BrnMenuImports,\n  BrnMenuBarDirective,\n] as const"
                },
                {
                    "name": "BrnMenuImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/brn/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  BrnMenuTriggerDirective,\n  BrnMenuDirective,\n  ...BrnMenuItemImports,\n] as const"
                },
                {
                    "name": "BrnMenuItemImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/brn/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  BrnMenuGroupDirective,\n  BrnMenuItemDirective,\n  BrnMenuItemRadioDirective,\n  BrnMenuItemCheckboxDirective,\n] as const"
                }
            ],
            "src/app/@core/ui/button/ui-button.directive.ts": [
                {
                    "name": "buttonVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)"
                }
            ],
            "src/app/@core/ui/avatar/brn/utils/is-bright.ts": [
                {
                    "name": "cleanup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(hex: string) => {\n\tconst noHash = hex.replace('#', '').trim().toLowerCase();\n\n\tif (!isShortHand(noHash)) return noHash;\n\n\treturn noHash\n\t\t.split('')\n\t\t.map((char) => char + char)\n\t\t.join('');\n}"
                },
                {
                    "name": "isBright",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(hex: string) => Number.parseInt(cleanup(hex), 16) > 0xffffff / 1.25"
                },
                {
                    "name": "isShortHand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(hex: string) => hex.length === 3"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}"
                }
            ],
            "src/app/@core/ui/icon/ui-icon.token.ts": [
                {
                    "name": "defaultConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UIIconConfig",
                    "defaultValue": "{\n\tsize: 'base',\n}"
                },
                {
                    "name": "UIIconConfigToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<UIIconConfig>('UIIconConfig')"
                }
            ],
            "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts": [
                {
                    "name": "firstAndLast",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(initials: string[]) => `${initials[0]}${initials[initials.length - 1]}`"
                },
                {
                    "name": "toInitial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(capitalize = true) =>\n\t(word: string) => {\n\t\tconst initial = word.charAt(0);\n\t\treturn capitalize ? initial.toLocaleUpperCase() : initial;\n\t}"
                }
            ],
            "src/app/@core/ui/menu/brn/brn-menu-align.ts": [
                {
                    "name": "getBrnMenuAlign",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(align: Exclude<BrnMenuAlign, undefined>): ConnectedPosition[] => [\n\t{\n\t\toriginX: align,\n\t\toriginY: 'bottom',\n\t\toverlayX: align,\n\t\toverlayY: 'top',\n\t},\n\t{\n\t\toriginX: align,\n\t\toriginY: 'top',\n\t\toverlayX: align,\n\t\toverlayY: 'bottom',\n\t},\n]"
                }
            ],
            "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts": [
                {
                    "name": "hlmMenuItemVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "cva(\n\t'group w-full relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:bg-accent focus-visible:text-accent-foreground disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: { inset: { true: 'pl-8', false: '' } },\n\t\tdefaultVariants: { inset: false },\n\t},\n)"
                }
            ],
            "src/app/@core/ui/menu/components/ui-menu.component.ts": [
                {
                    "name": "menuVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "cva(\n\t'block border-border min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'my-0.5',\n\t\t\t\tmenubar: 'my-2',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t},\n\t},\n)"
                }
            ],
            "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts": [
                {
                    "name": "parseDividedString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(value: NumberInput): NumberInput => {\n\tif (typeof value !== 'string' || !value.includes('/')) return value;\n\treturn value\n\t\t.split('/')\n\t\t.map((v) => Number.parseInt(v, 10))\n\t\t.reduce((a, b) => a / b);\n}"
                }
            ],
            "src/app/app.routes.server.ts": [
                {
                    "name": "serverRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerRoute[]",
                    "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]"
                }
            ],
            "src/app/@core/ui/typography/ui-typography.directive.ts": [
                {
                    "name": "typographyVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/typography/ui-typography.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "cva('', {\n  variants: {\n    variant: {\n      h1: 'scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl',\n      h2: 'scroll-m-20 border-border border-b pb-2 text-3xl font-semibold tracking-tight transition-colors first:mt-0',\n      h3: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      h4: 'scroll-m-20 text-xl font-semibold tracking-tight',\n      large: 'text-lg font-semibold',\n      lead: 'text-xl text-muted-foreground',\n      muted: 'text-sm text-muted-foreground',\n      p: 'leading-7 [&:not(:first-child)]:mt-6',\n      small: 'text-sm font-medium leading-none',\n      blockquote: 'mt-6 border-border border-l-2 pl-6 italic',\n      code: 'relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold',\n      ul: 'my-6 ml-6 list-disc [&>li]:mt-2',\n    },\n  },\n  defaultVariants: {\n    variant: 'p',\n  },\n})"
                }
            ],
            "src/app/@core/ui/avatar/index.ts": [
                {
                    "name": "UIAvatarImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/avatar/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[UIAvatarFallbackDirective, UIAvatarImageDirective, UIAvatarComponent] as const"
                }
            ],
            "src/app/@core/ui/menu/index.ts": [
                {
                    "name": "UIMenuBarImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[...UIMenuImports, UIMenuBarComponent, UIMenuBarItemDirective] as const"
                },
                {
                    "name": "UIMenuImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n\t...UIMenuItemImports,\n\t...UIMenuStructureImports,\n\tUIMenuComponent,\n\tUISubMenuComponent,\n] as const"
                },
                {
                    "name": "UIMenuItemImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\tUIMenuItemDirective,\n\tUIMenuItemIconDirective,\n\tUIMenuGroupComponent,\n\tUIMenuItemSubIndicatorComponent,\n\tUIMenuItemRadioComponent,\n\tUIMenuItemCheckComponent,\n\tUIMenuShortcutComponent,\n\tUIMenuItemCheckboxDirective,\n\tUIMenuItemRadioDirective,\n]"
                },
                {
                    "name": "UIMenuStructureImports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@core/ui/menu/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[UIMenuLabelComponent, UIMenuSeparatorComponent] as const"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/utils/cn.ts": [
                {
                    "name": "cn",
                    "file": "src/app/shared/utils/cn.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "inputs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "inputs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts": [
                {
                    "name": "hashManyTimes",
                    "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "times",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "times",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hashString",
                    "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hexColorFor",
                    "file": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/@core/ui/button/ui-button.token.ts": [
                {
                    "name": "injectBrnButtonConfig",
                    "file": "src/app/@core/ui/button/ui-button.token.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "BrnButtonConfig"
                },
                {
                    "name": "provideBrnButtonConfig",
                    "file": "src/app/@core/ui/button/ui-button.token.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "config",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValueProvider",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/@core/ui/icon/ui-icon.token.ts": [
                {
                    "name": "injectUIIconConfig",
                    "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "UIIconConfig"
                },
                {
                    "name": "provideUIIconConfig",
                    "file": "src/app/@core/ui/icon/ui-icon.token.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "config",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValueProvider",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/@core/ui/avatar/ui-avatar.component.ts": [
                {
                    "name": "AvatarVariants",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "VariantProps<>",
                    "file": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/@core/ui/menu/brn/brn-menu-align.ts": [
                {
                    "name": "BrnMenuAlign",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"start\" | \"center\" | \"end\" | undefined",
                    "file": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/@core/ui/button/ui-button.directive.ts": [
                {
                    "name": "ButtonVariants",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "VariantProps<>",
                    "file": "src/app/@core/ui/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts": [
                {
                    "name": "HlmMenuItemVariants",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "VariantProps<>",
                    "file": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/@core/ui/icon/ui-icon.directive.ts": [
                {
                    "name": "IconSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"base\" | \"lg\" | \"xl\" | \"none\" | ",
                    "file": "src/app/@core/ui/icon/ui-icon.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/@core/ui/menu/components/ui-menu.component.ts": [
                {
                    "name": "MenuVariants",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "VariantProps<>",
                    "file": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/@core/ui/typography/ui-typography.directive.ts": [
                {
                    "name": "TypographyVariants",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "VariantProps<>",
                    "file": "src/app/@core/ui/typography/ui-typography.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/@core/layout/header/avatar-menu/avatar-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/layout/sidebar/nav-button/nav-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/layout/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIAspectRatioDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/aspect-ratio/ui-aspect-ratio.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parseDividedString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/brn-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BrnAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/fallback/brn-avatar-fallback.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnAvatarFallbackDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/image/brn-avatar-image.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnAvatarImageDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnAvatarImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hashManyTimes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hashString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/hex-color-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "hexColorFor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "InitialsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firstAndLast",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/initials.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toInitial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cleanup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isBright",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/brn/utils/is-bright.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isShortHand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/fallback/ui-avatar-fallback.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIAvatarFallbackDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/image/ui-avatar-image.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIAvatarImageDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIAvatarImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "avatarVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/avatar/ui-avatar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "AvatarVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.directive.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.token.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BrnButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.token.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "injectBrnButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.token.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideBrnButtonConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.token.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnButtonConfigToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/button/ui-button.token.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIIconDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.directive.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "IconSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.token.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UIIconConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.token.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "injectUIIconConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.token.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideUIIconConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.token.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/icon/ui-icon.token.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIIconConfigToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-context-menu-trigger.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnContextMenuTriggerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getBrnMenuAlign",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-align.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "BrnMenuAlign",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-bar.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuBarDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-item-checkbox.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuItemCheckboxDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-item-radio.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuItemRadioDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu-trigger.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuTriggerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/brn-menu.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BrnMenuDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnContextMenuImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnMenuBarImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnMenuImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/brn/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrnMenuItemImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-item-check.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuItemCheckComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-item-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuItemRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-item-sub-indicator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuItemSubIndicatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-separator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuSeparatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu-shortcut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuShortcutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UIMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "menuVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-menu.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "MenuVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/components/ui-sub-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UISubMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-bar-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIMenuBarItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item-checkbox.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIMenuItemCheckboxDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item-icon.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIMenuItemIconDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item-radio.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIMenuItemRadioDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UIMenuItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hlmMenuItemVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/directives/ui-menu-item.directive.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "HlmMenuItemVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIMenuBarImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIMenuImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIMenuItemImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/menu/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UIMenuStructureImports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/typography/ui-typography.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UITypographyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/typography/ui-typography.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "typographyVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@core/ui/typography/ui-typography.directive.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TypographyVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/cn.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reqHandler",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}